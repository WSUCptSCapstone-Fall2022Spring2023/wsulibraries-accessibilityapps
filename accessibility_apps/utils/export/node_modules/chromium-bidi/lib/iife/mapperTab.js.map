{"version":3,"file":"mapperTab.js","sources":["../cjs/utils/EventEmitter.js","../../node_modules/mitt/dist/mitt.js","../cjs/cdp/cdpClient.js","../cjs/cdp/cdpConnection.js","../cjs/cdp/websocketTransport.js","../cjs/cdp/index.js","../cjs/utils/log.js","../cjs/utils/processingQueue.js","../cjs/bidiMapper/OutgoindBidiMessage.js","../cjs/bidiMapper/domains/events/SubscriptionManager.js","../cjs/utils/idWrapper.js","../cjs/utils/buffer.js","../cjs/protocol/protocol.js","../cjs/bidiMapper/domains/context/browsingContextStorage.js","../cjs/bidiMapper/domains/events/EventManager.js","../cjs/utils/deferred.js","../cjs/bidiMapper/domains/log/logHelper.js","../cjs/bidiMapper/domains/script/scriptEvaluator.js","../cjs/bidiMapper/domains/script/realm.js","../cjs/bidiMapper/domains/log/logManager.js","../cjs/bidiMapper/domains/context/browsingContextImpl.js","../cjs/bidiMapper/domains/context/browsingContextProcessor.js","../cjs/bidiMapper/CommandProcessor.js","../cjs/bidiMapper/BidiServer.js","../cjs/bidiTab/mapperTabPage.js","../../node_modules/zod/lib/helpers/util.js","../../node_modules/zod/lib/ZodError.js","../../node_modules/zod/lib/helpers/parseUtil.js","../../node_modules/zod/lib/helpers/typeAliases.js","../../node_modules/zod/lib/helpers/errorUtil.js","../../node_modules/zod/lib/types.js","../../node_modules/zod/lib/external.js","../../node_modules/zod/lib/index.js","../cjs/protocol-parser/protocol-parser.js","../cjs/bidiTab/bidiTab.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\nconst mitt_1 = __importDefault(require(\"mitt\"));\nclass EventEmitter {\n    #emitter = (0, mitt_1.default)();\n    on(type, handler) {\n        this.#emitter.on(type, handler);\n        return this;\n    }\n    /**\n     * Like `on` but the listener will only be fired once and then it will be removed.\n     * @param event - the event you'd like to listen to\n     * @param handler - the handler function to run when the event occurs\n     * @returns `this` to enable you to chain method calls.\n     */\n    once(event, handler) {\n        const onceHandler = (eventData) => {\n            handler(eventData);\n            this.off(event, onceHandler);\n        };\n        return this.on(event, onceHandler);\n    }\n    off(type, handler) {\n        this.#emitter.off(type, handler);\n        return this;\n    }\n    /**\n     * Emits an event and call any associated listeners.\n     *\n     * @param event - the event you'd like to emit\n     * @param eventData - any data you'd like to emit with the event\n     * @returns `true` if there are any listeners, `false` if there are not.\n     */\n    emit(event, eventData) {\n        this.#emitter.emit(event, eventData);\n    }\n}\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=EventEmitter.js.map","module.exports=function(n){return{all:n=n||new Map,on:function(e,t){var i=n.get(e);i?i.push(t):n.set(e,[t])},off:function(e,t){var i=n.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):n.set(e,[]))},emit:function(e,t){var i=n.get(e);i&&i.slice().map(function(n){n(t)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(e,t)})}}};\n//# sourceMappingURL=mitt.js.map\n","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createClient = exports.CdpClient = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nclass CdpClient extends EventEmitter_js_1.EventEmitter {\n    _cdpConnection;\n    _sessionId;\n    constructor(_cdpConnection, _sessionId) {\n        super();\n        this._cdpConnection = _cdpConnection;\n        this._sessionId = _sessionId;\n    }\n    /**\n     * Returns command promise, which will be resolved wth the command result after receiving CDP result.\n     * @param method Name of the CDP command to call.\n     * @param params Parameters to pass to the CDP command.\n     */\n    sendCommand(method, ...params) {\n        const param = params[0];\n        return this._cdpConnection.sendCommand(method, param, this._sessionId);\n    }\n}\nexports.CdpClient = CdpClient;\n/**\n * Creates a new CDP client object that communicates with the browser using a given\n * transport mechanism.\n * @param transport A transport object that will be used to send and receive raw CDP messages.\n * @returns A connected CDP client object.\n */\nfunction createClient(cdpConnection, sessionId) {\n    return new CdpClient(cdpConnection, sessionId);\n}\nexports.createClient = createClient;\n//# sourceMappingURL=cdpClient.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpConnection = void 0;\nconst cdpClient_js_1 = require(\"./cdpClient.js\");\n/**\n * Represents a high-level CDP connection to the browser backend.\n * Manages a CdpClient instance for each active CDP session.\n */\nclass CdpConnection {\n    #transport;\n    #browserCdpClient;\n    #sessionCdpClients = new Map();\n    #commandCallbacks = new Map();\n    #log;\n    #nextId = 0;\n    constructor(transport, logCdp = () => { }) {\n        this.#transport = transport;\n        this.#log = logCdp;\n        this.#transport.setOnMessage(this._onMessage);\n        this.#browserCdpClient = (0, cdpClient_js_1.createClient)(this, null);\n    }\n    /**\n     * Close the connection to the browser.\n     */\n    close() {\n        this.#transport.close();\n        for (const [_id, { reject }] of this.#commandCallbacks) {\n            reject(new Error('Disconnected'));\n        }\n        this.#commandCallbacks.clear();\n        this.#sessionCdpClients.clear();\n    }\n    /**\n     * @returns The CdpClient object attached to the root browser session.\n     */\n    browserClient() {\n        return this.#browserCdpClient;\n    }\n    /**\n     * Get a CdpClient instance by sessionId.\n     * @param sessionId The sessionId of the CdpClient to retrieve.\n     * @returns The CdpClient object attached to the given session, or null if the session is not attached.\n     */\n    getCdpClient(sessionId) {\n        const cdpClient = this.#sessionCdpClients.get(sessionId);\n        if (!cdpClient) {\n            throw new Error('Unknown CDP session ID');\n        }\n        return cdpClient;\n    }\n    sendCommand(method, params, sessionId) {\n        return new Promise((resolve, reject) => {\n            const id = this.#nextId++;\n            this.#commandCallbacks.set(id, { resolve, reject });\n            let messageObj = { id, method, params };\n            if (sessionId) {\n                messageObj.sessionId = sessionId;\n            }\n            const messageStr = JSON.stringify(messageObj);\n            this.#transport.sendMessage(messageStr);\n            this.#log('sent > ' + messageStr);\n        });\n    }\n    _onMessage = async (message) => {\n        this.#log('received < ' + message);\n        const parsed = JSON.parse(message);\n        // Update client map if a session is attached or detached.\n        // Listen for these events on every session.\n        if (parsed.method === 'Target.attachedToTarget') {\n            const { sessionId } = parsed.params;\n            this.#sessionCdpClients.set(sessionId, (0, cdpClient_js_1.createClient)(this, sessionId));\n        }\n        else if (parsed.method === 'Target.detachedFromTarget') {\n            const { sessionId } = parsed.params;\n            const client = this.#sessionCdpClients.get(sessionId);\n            if (client) {\n                this.#sessionCdpClients.delete(sessionId);\n            }\n        }\n        if (parsed.id !== undefined) {\n            // Handle command response.\n            const callbacks = this.#commandCallbacks.get(parsed.id);\n            if (callbacks) {\n                if (parsed.result) {\n                    callbacks.resolve(parsed.result);\n                }\n                else if (parsed.error) {\n                    callbacks.reject(parsed.error);\n                }\n            }\n        }\n        else if (parsed.method) {\n            const client = parsed.sessionId\n                ? this.#sessionCdpClients.get(parsed.sessionId)\n                : this.#browserCdpClient;\n            if (client) {\n                client.emit(parsed.method, parsed.params || {});\n            }\n        }\n    };\n}\nexports.CdpConnection = CdpConnection;\n//# sourceMappingURL=cdpConnection.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = void 0;\nclass WebSocketTransport {\n    _ws;\n    _onMessage = null;\n    constructor(_ws) {\n        this._ws = _ws;\n        this._ws.on('message', (message) => {\n            if (this._onMessage) {\n                this._onMessage.call(null, message);\n            }\n        });\n    }\n    setOnMessage(onMessage) {\n        this._onMessage = onMessage;\n    }\n    async sendMessage(message) {\n        this._ws.send(message);\n    }\n    close() {\n        this._onMessage = null;\n        this._ws.close();\n    }\n}\nexports.WebSocketTransport = WebSocketTransport;\n//# sourceMappingURL=websocketTransport.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = exports.CdpConnection = exports.CdpClient = void 0;\nvar cdpClient_js_1 = require(\"./cdpClient.js\");\nObject.defineProperty(exports, \"CdpClient\", { enumerable: true, get: function () { return cdpClient_js_1.CdpClient; } });\nvar cdpConnection_js_1 = require(\"./cdpConnection.js\");\nObject.defineProperty(exports, \"CdpConnection\", { enumerable: true, get: function () { return cdpConnection_js_1.CdpConnection; } });\nvar websocketTransport_js_1 = require(\"./websocketTransport.js\");\nObject.defineProperty(exports, \"WebSocketTransport\", { enumerable: true, get: function () { return websocketTransport_js_1.WebSocketTransport; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.LogType = void 0;\nvar LogType;\n(function (LogType) {\n    LogType[\"system\"] = \"System\";\n    LogType[\"bidi\"] = \"BiDi Messages\";\n    LogType[\"browsingContexts\"] = \"Browsing Contexts\";\n    LogType[\"cdp\"] = \"CDP\";\n    LogType[\"commandParser\"] = \"Command parser\";\n})(LogType = exports.LogType || (exports.LogType = {}));\nfunction log(logType) {\n    return (...messages) => {\n        console.log(logType, ...messages);\n        // Add messages to the Mapper Tab Page, if exists.\n        // Dynamic lookup to avoid circlular dependency.\n        if ('MapperTabPage' in globalThis) {\n            globalThis['MapperTabPage'].log(logType, ...messages);\n        }\n    };\n}\nexports.log = log;\n//# sourceMappingURL=log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessingQueue = void 0;\nconst log_js_1 = require(\"./log.js\");\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst logSystem = (0, log_js_1.log)(log_js_1.LogType.system);\nclass ProcessingQueue {\n    #queue = [];\n    #processor;\n    #catch;\n    // Flag to keep only 1 active processor.\n    #isProcessing = false;\n    constructor(processor, _catch = () => Promise.resolve()) {\n        this.#catch = _catch;\n        this.#processor = processor;\n    }\n    add(entry) {\n        this.#queue.push(entry);\n        // No need in waiting. Just initialise processor if needed.\n        // noinspection JSIgnoredPromiseFromCall\n        this.#processIfNeeded();\n    }\n    async #processIfNeeded() {\n        if (this.#isProcessing) {\n            return;\n        }\n        this.#isProcessing = true;\n        while (this.#queue.length > 0) {\n            const entryPromise = this.#queue.shift();\n            if (entryPromise !== undefined) {\n                await entryPromise\n                    .then((entry) => this.#processor(entry))\n                    .catch((e) => {\n                    logSystem('Event was not processed:' + e);\n                    this.#catch(e);\n                })\n                    .finally();\n            }\n        }\n        this.#isProcessing = false;\n    }\n}\nexports.ProcessingQueue = ProcessingQueue;\n//# sourceMappingURL=processingQueue.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutgoingBidiMessage = void 0;\nclass OutgoingBidiMessage {\n    #message;\n    #channel;\n    constructor(message, channel) {\n        this.#message = message;\n        this.#channel = channel;\n    }\n    static async createFromPromise(messagePromise, channel) {\n        const message = await messagePromise;\n        return new OutgoingBidiMessage(message, channel);\n    }\n    static createResolved(message, channel) {\n        return Promise.resolve(new OutgoingBidiMessage(message, channel));\n    }\n    get message() {\n        return this.#message;\n    }\n    get channel() {\n        return this.#channel;\n    }\n}\nexports.OutgoingBidiMessage = OutgoingBidiMessage;\n//# sourceMappingURL=OutgoindBidiMessage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionManager = void 0;\nclass SubscriptionManager {\n    #subscriptionPriority = 0;\n    // BrowsingContext `null` means the event has subscription across all the\n    // browsing contexts.\n    // Channel `null` means no `channel` should be added.\n    #channelToContextToEventMap = new Map();\n    getChannelsSubscribedToEvent(eventMethod, contextId) {\n        const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys())\n            .map((channel) => ({\n            priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n            channel,\n        }))\n            .filter(({ priority }) => priority !== null);\n        // Sort channels by priority.\n        return prioritiesAndChannels\n            .sort((a, b) => a.priority - b.priority)\n            .map(({ channel }) => channel);\n    }\n    #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (contextToEventMap === undefined) {\n            return null;\n        }\n        // Get all the subscription priorities.\n        let priorities = [\n            contextToEventMap.get(null)?.get(eventMethod),\n            contextToEventMap.get(contextId)?.get(eventMethod),\n        ].filter((p) => p !== undefined);\n        if (priorities.length === 0) {\n            // Not subscribed, return null.\n            return null;\n        }\n        // Return minimal priority.\n        return Math.min(...priorities);\n    }\n    subscribe(event, contextId, channel) {\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            this.#channelToContextToEventMap.set(channel, new Map());\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            contextToEventMap.set(contextId, new Map());\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        // Do not re-subscribe to events to keep the priority.\n        if (eventMap.has(event)) {\n            return;\n        }\n        eventMap.set(event, this.#subscriptionPriority++);\n    }\n    unsubscribe(event, contextId, channel) {\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            return;\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            return;\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        eventMap.delete(event);\n        // Clean up maps if empty.\n        if (eventMap.size === 0) {\n            contextToEventMap.delete(event);\n        }\n        if (contextToEventMap.size === 0) {\n            this.#channelToContextToEventMap.delete(channel);\n        }\n    }\n}\nexports.SubscriptionManager = SubscriptionManager;\n//# sourceMappingURL=SubscriptionManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdWrapper = void 0;\n/**\n * Creates an object with a positive unique incrementing id.\n */\nclass IdWrapper {\n    static #counter = 0;\n    #id;\n    constructor() {\n        this.#id = ++IdWrapper.#counter;\n    }\n    get id() {\n        return this.#id;\n    }\n}\nexports.IdWrapper = IdWrapper;\n//# sourceMappingURL=idWrapper.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Buffer = void 0;\n/**\n * Implements a FIFO buffer with a fixed size.\n */\nclass Buffer {\n    #capacity;\n    #entries = [];\n    #onItemRemoved;\n    /**\n     * @param capacity\n     * @param onItemRemoved optional delegate called for each removed element.\n     */\n    constructor(capacity, onItemRemoved = () => { }) {\n        this.#capacity = capacity;\n        this.#onItemRemoved = onItemRemoved;\n    }\n    get() {\n        return this.#entries;\n    }\n    add(value) {\n        this.#entries.push(value);\n        while (this.#entries.length > this.#capacity) {\n            const item = this.#entries.shift();\n            if (item !== undefined) {\n                this.#onItemRemoved(item);\n            }\n        }\n    }\n}\nexports.Buffer = Buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CDP = exports.Log = exports.BrowsingContext = exports.Message = void 0;\nvar Message;\n(function (Message) {\n    class ErrorResponseClass {\n        constructor(error, message, stacktrace) {\n            this.error = error;\n            this.message = message;\n            this.stacktrace = stacktrace;\n        }\n        error;\n        message;\n        stacktrace;\n        toErrorResponse(commandId) {\n            return {\n                id: commandId,\n                error: this.error,\n                message: this.message,\n                stacktrace: this.stacktrace,\n            };\n        }\n    }\n    Message.ErrorResponseClass = ErrorResponseClass;\n    class UnknownException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('unknown error', message, stacktrace);\n        }\n    }\n    Message.UnknownException = UnknownException;\n    class UnknownCommandException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('unknown command', message, stacktrace);\n        }\n    }\n    Message.UnknownCommandException = UnknownCommandException;\n    class InvalidArgumentException extends ErrorResponseClass {\n        constructor(message, stacktrace) {\n            super('invalid argument', message, stacktrace);\n        }\n    }\n    Message.InvalidArgumentException = InvalidArgumentException;\n    class NoSuchFrameException extends ErrorResponseClass {\n        constructor(message) {\n            super('no such frame', message);\n        }\n    }\n    Message.NoSuchFrameException = NoSuchFrameException;\n})(Message = exports.Message || (exports.Message = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n// https://w3c.github.io/webdriver-bidi/#module-log\nvar Log;\n(function (Log) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar CDP;\n(function (CDP) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\n//# sourceMappingURL=protocol.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass BrowsingContextStorage {\n    static #contexts = new Map();\n    static getTopLevelContexts() {\n        return Array.from(BrowsingContextStorage.#contexts.values()).filter((c) => c.parentId === null);\n    }\n    static removeContext(contextId) {\n        BrowsingContextStorage.#contexts.delete(contextId);\n    }\n    static addContext(context) {\n        BrowsingContextStorage.#contexts.set(context.contextId, context);\n        if (context.parentId !== null) {\n            BrowsingContextStorage.getKnownContext(context.parentId).addChild(context);\n        }\n    }\n    static hasKnownContext(contextId) {\n        return BrowsingContextStorage.#contexts.has(contextId);\n    }\n    static findContext(contextId) {\n        return BrowsingContextStorage.#contexts.get(contextId);\n    }\n    static getKnownContext(contextId) {\n        const result = BrowsingContextStorage.findContext(contextId);\n        if (result === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Context ${contextId} not found`);\n        }\n        return result;\n    }\n}\nexports.BrowsingContextStorage = BrowsingContextStorage;\n//# sourceMappingURL=browsingContextStorage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventManager = void 0;\nconst OutgoindBidiMessage_js_1 = require(\"../../OutgoindBidiMessage.js\");\nconst SubscriptionManager_js_1 = require(\"./SubscriptionManager.js\");\nconst idWrapper_js_1 = require(\"../../../utils/idWrapper.js\");\nconst buffer_js_1 = require(\"../../../utils/buffer.js\");\nconst browsingContextStorage_js_1 = require(\"../context/browsingContextStorage.js\");\nclass EventWrapper extends idWrapper_js_1.IdWrapper {\n    #contextId;\n    #event;\n    constructor(event, contextId) {\n        super();\n        this.#contextId = contextId;\n        this.#event = event;\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get event() {\n        return this.#event;\n    }\n}\nclass EventManager {\n    /**\n     * Maps event name to a desired buffer length.\n     */\n    static #eventBufferLength = new Map([\n        ['log.entryAdded', 100],\n    ]);\n    /**\n     * Maps event name to a set of contexts where this event already happened.\n     * Needed for getting buffered events from all the contexts in case of\n     * subscripting to all contexts.\n     */\n    #eventToContextsMap = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` to buffer. Used to get buffered events\n     * during subscription. Channel-agnostic.\n     */\n    #eventBuffers = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` + `channel` to last sent event id.\n     * Used to avoid sending duplicated events when user\n     * subscribes -> unsubscribes -> subscribes.\n     */\n    #lastMessageSent = new Map();\n    #subscriptionManager;\n    #bidiServer;\n    constructor(bidiServer) {\n        this.#bidiServer = bidiServer;\n        this.#subscriptionManager = new SubscriptionManager_js_1.SubscriptionManager();\n    }\n    /**\n     * Returns consistent key to be used to access value maps.\n     */\n    static #getMapKey(eventName, browsingContext, channel = undefined) {\n        return JSON.stringify({ eventName, browsingContext, channel });\n    }\n    async registerEvent(event, contextId) {\n        await this.registerPromiseEvent(Promise.resolve(event), contextId, event.method);\n    }\n    async registerPromiseEvent(event, contextId, eventName) {\n        const eventWrapper = new EventWrapper(event, contextId);\n        const sortedChannels = this.#subscriptionManager.getChannelsSubscribedToEvent(eventName, contextId);\n        this.#bufferEvent(eventWrapper, eventName);\n        // Send events to channels in the subscription priority.\n        for (const channel of sortedChannels) {\n            this.#bidiServer.emitOutgoingMessage(OutgoindBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(event, channel));\n            this.#markEventSent(eventWrapper, channel, eventName);\n        }\n    }\n    async subscribe(eventNames, contextIds, channel) {\n        for (let eventName of eventNames) {\n            for (let contextId of contextIds) {\n                if (contextId !== null &&\n                    !browsingContextStorage_js_1.BrowsingContextStorage.hasKnownContext(contextId)) {\n                    // Unknown context. Do nothing.\n                    continue;\n                }\n                this.#subscriptionManager.subscribe(eventName, contextId, channel);\n                for (let eventWrapper of this.#getBufferedEvents(eventName, contextId, channel)) {\n                    // The order of the events is important.\n                    this.#bidiServer.emitOutgoingMessage(OutgoindBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(eventWrapper.event, channel));\n                    this.#markEventSent(eventWrapper, channel, eventName);\n                }\n            }\n        }\n    }\n    async unsubscribe(events, contextIds, channel) {\n        for (let event of events) {\n            for (let contextId of contextIds) {\n                this.#subscriptionManager.unsubscribe(event, contextId, channel);\n            }\n        }\n    }\n    /**\n     * If the event is buffer-able, put it in the buffer.\n     */\n    #bufferEvent(eventWrapper, eventName) {\n        if (!EventManager.#eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const bufferMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId);\n        if (!this.#eventBuffers.has(bufferMapKey)) {\n            this.#eventBuffers.set(bufferMapKey, new buffer_js_1.Buffer(EventManager.#eventBufferLength.get(eventName)));\n        }\n        this.#eventBuffers.get(bufferMapKey).add(eventWrapper);\n        // Add the context to the list of contexts having `eventName` events.\n        if (!this.#eventToContextsMap.has(eventName)) {\n            this.#eventToContextsMap.set(eventName, new Set());\n        }\n        this.#eventToContextsMap.get(eventName).add(eventWrapper.contextId);\n    }\n    /**\n     * If the event is buffer-able, mark it as sent to the given contextId and channel.\n     */\n    #markEventSent(eventWrapper, channel, eventName) {\n        if (!EventManager.#eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const lastSentMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId, channel);\n        this.#lastMessageSent.set(lastSentMapKey, Math.max(this.#lastMessageSent.get(lastSentMapKey) ?? 0, eventWrapper.id));\n    }\n    /**\n     * Returns events which are buffered and not yet sent to the given channel events.\n     */\n    #getBufferedEvents(eventName, contextId, channel) {\n        const bufferMapKey = EventManager.#getMapKey(eventName, contextId);\n        const lastSentMapKey = EventManager.#getMapKey(eventName, contextId, channel);\n        const lastSentMessageId = this.#lastMessageSent.get(lastSentMapKey) ?? -Infinity;\n        const result = this.#eventBuffers\n            .get(bufferMapKey)\n            ?.get()\n            .filter((wrapper) => wrapper.id > lastSentMessageId) ?? [];\n        if (contextId === null) {\n            // For global subscriptions, events buffered in each context should be sent back.\n            Array.from(this.#eventToContextsMap.get(eventName)?.keys() ?? [])\n                // Events without context are already in the result.\n                .filter((_contextId) => _contextId !== null)\n                .map((_contextId) => this.#getBufferedEvents(eventName, _contextId, channel))\n                .forEach((events) => result.push(...events));\n        }\n        return result.sort((e1, e2) => e1.id - e2.id);\n    }\n}\nexports.EventManager = EventManager;\n//# sourceMappingURL=EventManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\nclass Deferred {\n    #resolve = () => { };\n    #reject = () => { };\n    #promise;\n    #isFinished = false;\n    get isFinished() {\n        return this.#isFinished;\n    }\n    constructor() {\n        this.#promise = new Promise((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n    }\n    then(onFulfilled, onRejected) {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return this.#promise.catch(onRejected);\n    }\n    resolve(value) {\n        this.#isFinished = true;\n        this.#resolve(value);\n    }\n    reject(reason) {\n        this.#isFinished = true;\n        this.#reject(reason);\n    }\n    finally(onFinally) {\n        return this.#promise.finally(onFinally);\n    }\n    [Symbol.toStringTag] = 'Promise';\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRemoteValuesText = exports.logMessageFormatter = void 0;\nconst specifiers = ['%s', '%d', '%i', '%f', '%o', '%O', '%c'];\nfunction isFormmatSpecifier(str) {\n    return specifiers.some((spec) => str.includes(spec));\n}\n/**\n * @param args input remote values to be format printed\n * @returns parsed text of the remote values in specific format\n */\nfunction logMessageFormatter(args) {\n    let output = '';\n    const argFormat = args[0].value.toString();\n    const argValues = args.slice(1, undefined);\n    const tokens = argFormat.split(new RegExp(specifiers.map((spec) => '(' + spec + ')').join('|'), 'g'));\n    for (const token of tokens) {\n        if (token === undefined || token == '') {\n            continue;\n        }\n        if (isFormmatSpecifier(token)) {\n            const arg = argValues.shift();\n            // raise an exception when less value is provided\n            if (arg === undefined) {\n                throw new Error('Less value is provided: \"' + getRemoteValuesText(args, false) + '\"');\n            }\n            if (token === '%s') {\n                output += stringFromArg(arg);\n            }\n            else if (token === '%d' || token === '%i') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseInt(arg.value.toString(), 10);\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else if (token === '%f') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseFloat(arg.value.toString());\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else {\n                // %o, %O, %c\n                output += toJson(arg);\n            }\n        }\n        else {\n            output += token;\n        }\n    }\n    // raise an exception when more value is provided\n    if (argValues.length > 0) {\n        throw new Error('More value is provided: \"' + getRemoteValuesText(args, false) + '\"');\n    }\n    return output;\n}\nexports.logMessageFormatter = logMessageFormatter;\n/**\n * @param arg input remote value to be parsed\n * @returns parsed text of the remote value\n *\n * input: {\"type\": \"number\", \"value\": 1}\n * output: 1\n *\n * input: {\"type\": \"string\", \"value\": \"abc\"}\n * output: \"abc\"\n *\n * input: {\"type\": \"object\",  \"value\": [[\"id\", {\"type\": \"number\", \"value\": 1}]]}\n * output: '{\"id\": 1}'\n *\n * input: {\"type\": \"object\", \"value\": [[\"font-size\", {\"type\": \"string\", \"value\": \"20px\"}]]}\n * output: '{\"font-size\": \"20px\"}'\n */\nfunction toJson(arg) {\n    // arg type validation\n    if (arg.type !== 'array' &&\n        arg.type !== 'bigint' &&\n        arg.type !== 'date' &&\n        arg.type !== 'number' &&\n        arg.type !== 'object' &&\n        arg.type !== 'string') {\n        return stringFromArg(arg);\n    }\n    if (arg.type === 'bigint') {\n        return arg.value.toString() + 'n';\n    }\n    if (arg.type === 'number') {\n        return arg.value.toString();\n    }\n    if (['date', 'string'].includes(arg.type)) {\n        return JSON.stringify(arg.value);\n    }\n    if (arg.type === 'object') {\n        return ('{' +\n            arg.value\n                .map((pair) => {\n                return `${JSON.stringify(pair[0])}:${toJson(pair[1])}`;\n            })\n                .join(',') +\n            '}');\n    }\n    if (arg.type === 'array') {\n        return '[' + arg.value.map((val) => toJson(val)).join(',') + ']';\n    }\n    throw Error('Invalid value type: ' + arg.toString());\n}\nfunction stringFromArg(arg) {\n    if (!arg.hasOwnProperty('value')) {\n        return arg.type;\n    }\n    switch (arg.type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n            return String(arg.value);\n        case 'regexp':\n            return `/${arg.value.pattern}/${arg.value.flags}`;\n        case 'date':\n            return new Date(arg.value).toString();\n        case 'object':\n            return `Object(${arg.value?.length})`;\n        case 'array':\n            return `Array(${arg.value?.length})`;\n        case 'map':\n            return `Map(${arg.value.length})`;\n        case 'set':\n            return `Set(${arg.value.length})`;\n        case 'node':\n            return 'node';\n        default:\n            return arg.type;\n    }\n}\nfunction getRemoteValuesText(args, formatText) {\n    const arg = args[0];\n    if (!arg) {\n        return '';\n    }\n    // if args[0] is a format specifier, format the args as output\n    if (arg.type === 'string' &&\n        isFormmatSpecifier(arg.value.toString()) &&\n        formatText) {\n        return logMessageFormatter(args);\n    }\n    // if args[0] is not a format specifier, just join the args with \\u0020\n    return args\n        .map((arg) => {\n        return stringFromArg(arg);\n    })\n        .join('\\u0020');\n}\nexports.getRemoteValuesText = getRemoteValuesText;\n//# sourceMappingURL=logHelper.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScriptEvaluator = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass ScriptEvaluator {\n    // As `script.evaluate` wraps call into serialization script, `lineNumber`\n    // should be adjusted.\n    static #evaluateStacktraceLineOffset = 0;\n    static #callFunctionStacktraceLineOffset = 1;\n    // Keeps track of `handle`s and their realms sent to client.\n    static #knownHandlesToRealm = new Map();\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpRemoteObject CDP remote object to be serialized.\n     * @param resultOwnership indicates desired OwnershipModel.\n     * @param realm\n     */\n    static async serializeCdpObject(cdpRemoteObject, resultOwnership, realm) {\n        const arg = this.#cdpRemoteObjectToCallArgument(cdpRemoteObject);\n        const cdpWebDriverValue = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => obj),\n            awaitPromise: false,\n            arguments: [arg],\n            generateWebDriverValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return await this.#cdpToBidiValue(cdpWebDriverValue, realm, resultOwnership);\n    }\n    static #cdpRemoteObjectToCallArgument(cdpRemoteObject) {\n        if (cdpRemoteObject.objectId !== undefined) {\n            return { objectId: cdpRemoteObject.objectId };\n        }\n        if (cdpRemoteObject.unserializableValue !== undefined) {\n            return { unserializableValue: cdpRemoteObject.unserializableValue };\n        }\n        return { value: cdpRemoteObject.value };\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @param realm\n     * @returns string The stringified object.\n     */\n    static async stringifyObject(cdpObject, realm) {\n        let stringifyResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String(function (obj) {\n                return String(obj);\n            }),\n            awaitPromise: false,\n            arguments: [cdpObject],\n            returnByValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return stringifyResult.result.value;\n    }\n    static async callFunction(realm, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const callFunctionAndSerializeScript = `(...args)=>{ return _callFunction((\\n${functionDeclaration}\\n), args);\n      function _callFunction(f, args) {\n        const deserializedThis = args.shift();\n        const deserializedArgs = args;\n        return f.apply(deserializedThis, deserializedArgs);\n      }}`;\n        const thisAndArgumentsList = [\n            await this.#deserializeToCdpArg(_this, realm),\n        ];\n        thisAndArgumentsList.push(...(await Promise.all(_arguments.map(async (a) => {\n            return await this.#deserializeToCdpArg(a, realm);\n        }))));\n        let cdpCallFunctionResult;\n        try {\n            cdpCallFunctionResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: callFunctionAndSerializeScript,\n                awaitPromise,\n                arguments: thisAndArgumentsList,\n                generateWebDriverValue: true,\n                executionContextId: realm.executionContextId,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the argument.\n            // The check can be done on the `deserialization` step, but this approach\n            // helps to save round-trips.\n            if (e.code === -32000 &&\n                [\n                    'Could not find object with given id',\n                    'Argument should belong to the same JavaScript world as target object',\n                ].includes(e.message)) {\n                throw new protocol_js_1.Message.InvalidArgumentException('Handle was not found.');\n            }\n            throw e;\n        }\n        if (cdpCallFunctionResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpCallFunctionResult.exceptionDetails, this.#callFunctionStacktraceLineOffset, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: await ScriptEvaluator.#cdpToBidiValue(cdpCallFunctionResult, realm, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    static realmDestroyed(realm) {\n        return Array.from(this.#knownHandlesToRealm.entries())\n            .filter(([, r]) => r === realm.realmId)\n            .map(([h]) => this.#knownHandlesToRealm.delete(h));\n    }\n    static async disown(realm, handle) {\n        // Disowning an object from different realm does nothing.\n        if (ScriptEvaluator.#knownHandlesToRealm.get(handle) !== realm.realmId) {\n            return;\n        }\n        try {\n            await realm.cdpClient.sendCommand('Runtime.releaseObject', {\n                objectId: handle,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the unknown handler.\n            // Ignore the error if so.\n            if (!(e.code === -32000 && e.message === 'Invalid remote object id')) {\n                throw e;\n            }\n        }\n        this.#knownHandlesToRealm.delete(handle);\n    }\n    static async #serializeCdpExceptionDetails(cdpExceptionDetails, lineOffset, resultOwnership, realm) {\n        const callFrames = cdpExceptionDetails.stackTrace?.callFrames.map((frame) => ({\n            url: frame.url,\n            functionName: frame.functionName,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: frame.lineNumber - lineOffset,\n            columnNumber: frame.columnNumber,\n        }));\n        const exception = await this.serializeCdpObject(\n        // Exception should always be there.\n        cdpExceptionDetails.exception, resultOwnership, realm);\n        const text = await this.stringifyObject(cdpExceptionDetails.exception, realm);\n        return {\n            exception,\n            columnNumber: cdpExceptionDetails.columnNumber,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: cdpExceptionDetails.lineNumber - lineOffset,\n            stackTrace: {\n                callFrames: callFrames || [],\n            },\n            text: text || cdpExceptionDetails.text,\n        };\n    }\n    static async #cdpToBidiValue(cdpValue, realm, resultOwnership) {\n        // This relies on the CDP to implement proper BiDi serialization, except\n        // objectIds+handles.\n        const cdpWebDriverValue = cdpValue.result.webDriverValue;\n        if (!cdpValue.result.objectId) {\n            return cdpWebDriverValue;\n        }\n        const objectId = cdpValue.result.objectId;\n        const bidiValue = cdpWebDriverValue;\n        if (resultOwnership === 'root') {\n            bidiValue.handle = objectId;\n            // Remember all the handles sent to client.\n            this.#knownHandlesToRealm.set(objectId, realm.realmId);\n        }\n        else {\n            await realm.cdpClient.sendCommand('Runtime.releaseObject', { objectId });\n        }\n        return bidiValue;\n    }\n    static async scriptEvaluate(realm, expression, awaitPromise, resultOwnership) {\n        let cdpEvaluateResult = await realm.cdpClient.sendCommand('Runtime.evaluate', {\n            contextId: realm.executionContextId,\n            expression,\n            awaitPromise,\n            generateWebDriverValue: true,\n        });\n        if (cdpEvaluateResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpEvaluateResult.exceptionDetails, this.#evaluateStacktraceLineOffset, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: await ScriptEvaluator.#cdpToBidiValue(cdpEvaluateResult, realm, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    static async #deserializeToCdpArg(argumentValue, realm) {\n        if ('handle' in argumentValue) {\n            return { objectId: argumentValue.handle };\n        }\n        switch (argumentValue.type) {\n            // Primitive Protocol Value\n            // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-primitiveProtocolValue\n            case 'undefined': {\n                return { unserializableValue: 'undefined' };\n            }\n            case 'null': {\n                return { unserializableValue: 'null' };\n            }\n            case 'string': {\n                return { value: argumentValue.value };\n            }\n            case 'number': {\n                if (argumentValue.value === 'NaN') {\n                    return { unserializableValue: 'NaN' };\n                }\n                else if (argumentValue.value === '-0') {\n                    return { unserializableValue: '-0' };\n                }\n                else if (argumentValue.value === '+Infinity') {\n                    return { unserializableValue: '+Infinity' };\n                }\n                else if (argumentValue.value === 'Infinity') {\n                    return { unserializableValue: 'Infinity' };\n                }\n                else if (argumentValue.value === '-Infinity') {\n                    return { unserializableValue: '-Infinity' };\n                }\n                else {\n                    return {\n                        value: argumentValue.value,\n                    };\n                }\n            }\n            case 'boolean': {\n                return { value: !!argumentValue.value };\n            }\n            case 'bigint': {\n                return {\n                    unserializableValue: `BigInt(${JSON.stringify(argumentValue.value)})`,\n                };\n            }\n            // Local Value\n            // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-LocalValue\n            case 'date': {\n                return {\n                    unserializableValue: `new Date(Date.parse(${JSON.stringify(argumentValue.value)}))`,\n                };\n            }\n            case 'regexp': {\n                return {\n                    unserializableValue: `new RegExp(${JSON.stringify(argumentValue.value.pattern)}, ${JSON.stringify(argumentValue.value.flags)})`,\n                };\n            }\n            case 'map': {\n                // TODO(sadym): if non of the nested keys and values has remote\n                //  reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                let argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(function (...args) {\n                        const result = new Map();\n                        for (let i = 0; i < args.length; i += 2) {\n                            result.set(args[i], args[i + 1]);\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(sadym): dispose nested objects.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'object': {\n                // TODO(sadym): if non of the nested keys and values has remote\n                //  reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                let argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(function (...args) {\n                        const result = {};\n                        for (let i = 0; i < args.length; i += 2) {\n                            // Key should be either `string`, `number`, or `symbol`.\n                            const key = args[i];\n                            result[key] = args[i + 1];\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(sadym): dispose nested objects.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'array': {\n                // TODO(sadym): if non of the nested items has remote reference,\n                //  serialize to `unserializableValue` without CDP roundtrip.\n                const args = await ScriptEvaluator.#flattenValueList(argumentValue.value, realm);\n                let argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(function (...args) {\n                        return args;\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(sadym): dispose nested objects.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'set': {\n                // TODO(sadym): if non of the nested items has remote reference,\n                //  serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                let argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(function (...args) {\n                        return new Set(args);\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                return { objectId: argEvalResult.result.objectId };\n            }\n            // TODO(sadym): dispose nested objects.\n            default:\n                throw new Error(`Value ${JSON.stringify(argumentValue)} is not deserializable.`);\n        }\n    }\n    static async #flattenKeyValuePairs(value, realm) {\n        const keyValueArray = [];\n        for (let pair of value) {\n            const key = pair[0];\n            const value = pair[1];\n            let keyArg, valueArg;\n            if (typeof key === 'string') {\n                // Key is a string.\n                keyArg = { value: key };\n            }\n            else {\n                // Key is a serialized value.\n                keyArg = await this.#deserializeToCdpArg(key, realm);\n            }\n            valueArg = await this.#deserializeToCdpArg(value, realm);\n            keyValueArray.push(keyArg);\n            keyValueArray.push(valueArg);\n        }\n        return keyValueArray;\n    }\n    static async #flattenValueList(list, realm) {\n        const result = [];\n        for (let value of list) {\n            result.push(await this.#deserializeToCdpArg(value, realm));\n        }\n        return result;\n    }\n}\nexports.ScriptEvaluator = ScriptEvaluator;\n//# sourceMappingURL=scriptEvaluator.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Realm = exports.RealmType = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst scriptEvaluator_js_1 = require(\"./scriptEvaluator.js\");\nconst browsingContextStorage_js_1 = require(\"../context/browsingContextStorage.js\");\nvar RealmType;\n(function (RealmType) {\n    RealmType[\"window\"] = \"window\";\n})(RealmType = exports.RealmType || (exports.RealmType = {}));\nclass Realm {\n    static #realmMap = new Map();\n    static create(realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient) {\n        const realm = new Realm(realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient);\n        Realm.#realmMap.set(realm.realmId, realm);\n        return realm;\n    }\n    static findRealms(filter = {}) {\n        return Array.from(Realm.#realmMap.values()).filter((realm) => {\n            if (filter.realmId !== undefined && filter.realmId !== realm.realmId) {\n                return false;\n            }\n            if (filter.browsingContextId !== undefined &&\n                filter.browsingContextId !== realm.browsingContextId) {\n                return false;\n            }\n            if (filter.executionContextId !== undefined &&\n                filter.executionContextId !== realm.executionContextId) {\n                return false;\n            }\n            if (filter.type !== undefined && filter.type !== realm.type) {\n                return false;\n            }\n            if (filter.sandbox !== undefined && filter.sandbox !== realm.#sandbox) {\n                return false;\n            }\n            if (filter.cdpSessionId !== undefined &&\n                filter.cdpSessionId !== realm.#cdpSessionId) {\n                return false;\n            }\n            return true;\n        });\n    }\n    static findRealm(filter) {\n        const maybeRealms = Realm.findRealms(filter);\n        if (maybeRealms.length !== 1) {\n            return undefined;\n        }\n        return maybeRealms[0];\n    }\n    static getRealm(filter) {\n        const maybeRealm = Realm.findRealm(filter);\n        if (maybeRealm === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Realm ${JSON.stringify(filter)} not found`);\n        }\n        return maybeRealm;\n    }\n    static clearBrowsingContext(browsingContextId) {\n        Realm.findRealms({ browsingContextId }).map((realm) => realm.delete());\n    }\n    delete() {\n        Realm.#realmMap.delete(this.realmId);\n        scriptEvaluator_js_1.ScriptEvaluator.realmDestroyed(this);\n    }\n    #realmId;\n    #browsingContextId;\n    #executionContextId;\n    #origin;\n    #type;\n    #sandbox;\n    #cdpSessionId;\n    #cdpClient;\n    constructor(realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient) {\n        this.#realmId = realmId;\n        this.#browsingContextId = browsingContextId;\n        this.#executionContextId = executionContextId;\n        this.#sandbox = sandbox;\n        this.#origin = origin;\n        this.#type = type;\n        this.#cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n    }\n    toBiDi() {\n        return {\n            realm: this.realmId,\n            origin: this.origin,\n            type: this.type,\n            context: this.browsingContextId,\n            ...(this.#sandbox !== undefined ? { sandbox: this.#sandbox } : {}),\n        };\n    }\n    get realmId() {\n        return this.#realmId;\n    }\n    get browsingContextId() {\n        return this.#browsingContextId;\n    }\n    get executionContextId() {\n        return this.#executionContextId;\n    }\n    get origin() {\n        return this.#origin;\n    }\n    get type() {\n        return this.#type;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    async callFunction(functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const context = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await scriptEvaluator_js_1.ScriptEvaluator.callFunction(this, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership),\n        };\n    }\n    async scriptEvaluate(expression, awaitPromise, resultOwnership) {\n        const context = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await scriptEvaluator_js_1.ScriptEvaluator.scriptEvaluate(this, expression, awaitPromise, resultOwnership),\n        };\n    }\n    async disown(handle) {\n        await scriptEvaluator_js_1.ScriptEvaluator.disown(this, handle);\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpObject CDP remote object to be serialized.\n     * @param resultOwnership indicates desired OwnershipModel.\n     */\n    async serializeCdpObject(cdpObject, resultOwnership) {\n        return await scriptEvaluator_js_1.ScriptEvaluator.serializeCdpObject(cdpObject, resultOwnership, this);\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @param realm\n     * @returns string The stringified object.\n     */\n    async stringifyObject(cdpObject) {\n        return scriptEvaluator_js_1.ScriptEvaluator.stringifyObject(cdpObject, this);\n    }\n}\nexports.Realm = Realm;\n//# sourceMappingURL=realm.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst logHelper_js_1 = require(\"./logHelper.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nclass LogManager {\n    #cdpClient;\n    #cdpSessionId;\n    #eventManager;\n    constructor(cdpClient, cdpSessionId, eventManager) {\n        this.#cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n        this.#eventManager = eventManager;\n    }\n    static create(cdpClient, cdpSessionId, eventManager) {\n        const logManager = new LogManager(cdpClient, cdpSessionId, eventManager);\n        logManager.#initialize();\n        return logManager;\n    }\n    #initialize() {\n        this.#initializeEventListeners();\n    }\n    #initializeEventListeners() {\n        this.#initializeLogEntryAddedEventListener();\n    }\n    #initializeLogEntryAddedEventListener() {\n        this.#cdpClient.on('Runtime.consoleAPICalled', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = realm_js_1.Realm.findRealm({\n                cdpSessionId: this.#cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n            const argsPromise = realm === undefined\n                ? Promise.resolve(params.args)\n                : // Properly serialize arguments if possible.\n                    Promise.all(params.args.map(async (arg) => {\n                        return realm.serializeCdpObject(arg, 'none');\n                    }));\n            // No need in waiting for the result, just register the event promise.\n            // noinspection JSIgnoredPromiseFromCall\n            this.#eventManager.registerPromiseEvent(argsPromise.then((args) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: LogManager.#getLogLevel(params.type),\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text: (0, logHelper_js_1.getRemoteValuesText)(args, true),\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: LogManager.#getBidiStackTrace(params.stackTrace),\n                    type: 'console',\n                    // Console method is `warn`, not `warning`.\n                    method: params.type === 'warning' ? 'warn' : params.type,\n                    args,\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n        this.#cdpClient.on('Runtime.exceptionThrown', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = realm_js_1.Realm.findRealm({\n                cdpSessionId: this.#cdpSessionId,\n                executionContextId: params.exceptionDetails.executionContextId,\n            });\n            // Try all the best to get the exception text.\n            const textPromise = (async () => {\n                if (!params.exceptionDetails.exception) {\n                    return params.exceptionDetails.text;\n                }\n                if (realm === undefined) {\n                    return JSON.stringify(params.exceptionDetails.exception);\n                }\n                return await realm.stringifyObject(params.exceptionDetails.exception);\n            })();\n            // No need in waiting for the result, just register the event promise.\n            // noinspection JSIgnoredPromiseFromCall\n            this.#eventManager.registerPromiseEvent(textPromise.then((text) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: 'error',\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text,\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: LogManager.#getBidiStackTrace(params.exceptionDetails.stackTrace),\n                    type: 'javascript',\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n    }\n    static #getLogLevel(consoleApiType) {\n        if (['assert', 'error'].includes(consoleApiType)) {\n            return 'error';\n        }\n        if (['debug', 'trace'].includes(consoleApiType)) {\n            return 'debug';\n        }\n        if (['warn', 'warning'].includes(consoleApiType)) {\n            return 'warn';\n        }\n        return 'info';\n    }\n    // convert CDP StackTrace object to Bidi StackTrace object\n    static #getBidiStackTrace(cdpStackTrace) {\n        const stackFrames = cdpStackTrace?.callFrames.map((callFrame) => {\n            return {\n                columnNumber: callFrame.columnNumber,\n                functionName: callFrame.functionName,\n                lineNumber: callFrame.lineNumber,\n                url: callFrame.url,\n            };\n        });\n        return stackFrames ? { callFrames: stackFrames } : undefined;\n    }\n}\nexports.LogManager = LogManager;\n//# sourceMappingURL=logManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextImpl = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst logManager_js_1 = require(\"../log/logManager.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nconst browsingContextStorage_js_1 = require(\"./browsingContextStorage.js\");\nclass BrowsingContextImpl {\n    #targetDefers = {\n        documentInitialized: new deferred_js_1.Deferred(),\n        targetUnblocked: new deferred_js_1.Deferred(),\n        Page: {\n            navigatedWithinDocument: new deferred_js_1.Deferred(),\n            lifecycleEvent: {\n                DOMContentLoaded: new deferred_js_1.Deferred(),\n                load: new deferred_js_1.Deferred(),\n            },\n        },\n    };\n    #contextId;\n    #parentId;\n    #cdpBrowserContextId;\n    #eventManager;\n    #children = new Map();\n    #url = 'about:blank';\n    #loaderId = null;\n    #cdpSessionId;\n    #cdpClient;\n    #maybeDefaultRealm;\n    get #defaultRealm() {\n        if (this.#maybeDefaultRealm === undefined) {\n            throw new Error(`No default realm for browsing context ${this.#contextId}`);\n        }\n        return this.#maybeDefaultRealm;\n    }\n    constructor(contextId, parentId, cdpClient, cdpSessionId, cdpBrowserContextId, eventManager) {\n        this.#contextId = contextId;\n        this.#parentId = parentId;\n        this.#cdpClient = cdpClient;\n        this.#cdpBrowserContextId = cdpBrowserContextId;\n        this.#eventManager = eventManager;\n        this.#cdpSessionId = cdpSessionId;\n        this.#initListeners();\n        browsingContextStorage_js_1.BrowsingContextStorage.addContext(this);\n    }\n    static async createFrameContext(contextId, parentId, cdpClient, cdpSessionId, eventManager) {\n        const context = new BrowsingContextImpl(contextId, parentId, cdpClient, cdpSessionId, null, eventManager);\n        context.#targetDefers.targetUnblocked.resolve();\n        await eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.contextId);\n    }\n    static async createTargetContext(contextId, parentId, cdpClient, cdpSessionId, cdpBrowserContextId, eventManager) {\n        const context = new BrowsingContextImpl(contextId, parentId, cdpClient, cdpSessionId, cdpBrowserContextId, eventManager);\n        // No need in waiting for target to be unblocked.\n        // noinspection ES6MissingAwait\n        context.#unblockAttachedTarget();\n        await eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.contextId);\n    }\n    get cdpBrowserContextId() {\n        return this.#cdpBrowserContextId;\n    }\n    convertFrameToTargetContext(cdpClient, cdpSessionId) {\n        this.#updateConnection(cdpClient, cdpSessionId);\n        // No need in waiting for target to be unblocked.\n        // noinspection JSIgnoredPromiseFromCall\n        this.#unblockAttachedTarget();\n    }\n    async delete() {\n        await this.#removeChildContexts();\n        // Remove context from the parent.\n        if (this.parentId !== null) {\n            const parent = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(this.parentId);\n            parent.#children.delete(this.contextId);\n        }\n        await this.#eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextDestroyedEvent,\n            params: this.serializeToBidiValue(),\n        }, this.contextId);\n        browsingContextStorage_js_1.BrowsingContextStorage.removeContext(this.contextId);\n    }\n    async #removeChildContexts() {\n        await Promise.all(this.children.map((child) => child.delete()));\n    }\n    #updateConnection(cdpClient, cdpSessionId) {\n        if (!this.#targetDefers.targetUnblocked.isFinished) {\n            this.#targetDefers.targetUnblocked.reject('OOPiF');\n        }\n        this.#targetDefers.targetUnblocked = new deferred_js_1.Deferred();\n        this.#cdpClient = cdpClient;\n        this.#cdpSessionId = cdpSessionId;\n        this.#initListeners();\n    }\n    async #unblockAttachedTarget() {\n        logManager_js_1.LogManager.create(this.#cdpClient, this.#cdpSessionId, this.#eventManager);\n        await this.#cdpClient.sendCommand('Runtime.enable');\n        await this.#cdpClient.sendCommand('Page.enable');\n        await this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n            enabled: true,\n        });\n        await this.#cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n        this.#targetDefers.targetUnblocked.resolve();\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get parentId() {\n        return this.#parentId;\n    }\n    get cdpSessionId() {\n        return this.#cdpSessionId;\n    }\n    get children() {\n        return Array.from(this.#children.values());\n    }\n    get url() {\n        return this.#url;\n    }\n    addChild(child) {\n        this.#children.set(child.contextId, child);\n    }\n    async awaitLoaded() {\n        await this.#targetDefers.Page.lifecycleEvent.load;\n    }\n    async awaitUnblocked() {\n        await this.#targetDefers.targetUnblocked;\n    }\n    serializeToBidiValue(maxDepth = 0, addParentFiled = true) {\n        return {\n            context: this.#contextId,\n            url: this.url,\n            children: maxDepth > 0\n                ? this.children.map((c) => c.serializeToBidiValue(maxDepth - 1, false))\n                : null,\n            ...(addParentFiled ? { parent: this.#parentId } : {}),\n        };\n    }\n    #initListeners() {\n        this.#cdpClient.on('Target.targetInfoChanged', (params) => {\n            if (this.contextId !== params.targetInfo.targetId) {\n                return;\n            }\n            this.#url = params.targetInfo.url;\n        });\n        this.#cdpClient.on('Page.frameNavigated', async (params) => {\n            if (this.contextId !== params.frame.id) {\n                return;\n            }\n            this.#url = params.frame.url + (params.frame.urlFragment ?? '');\n            // At the point the page is initiated, all the nested iframes from the\n            // previous page are detached and realms are destroyed.\n            // Remove context's children.\n            await this.#removeChildContexts();\n            // Remove all the already created realms.\n            realm_js_1.Realm.clearBrowsingContext(this.contextId);\n        });\n        this.#cdpClient.on('Page.navigatedWithinDocument', (params) => {\n            if (this.contextId !== params.frameId) {\n                return;\n            }\n            this.#url = params.url;\n            this.#targetDefers.Page.navigatedWithinDocument.resolve(params);\n        });\n        this.#cdpClient.on('Page.lifecycleEvent', async (params) => {\n            if (this.contextId !== params.frameId) {\n                return;\n            }\n            if (params.name === 'init') {\n                this.#documentChanged(params.loaderId);\n                this.#targetDefers.documentInitialized.resolve();\n            }\n            if (params.name === 'commit') {\n                this.#loaderId = params.loaderId;\n                return;\n            }\n            if (params.loaderId !== this.#loaderId) {\n                return;\n            }\n            switch (params.name) {\n                case 'DOMContentLoaded':\n                    this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded.resolve(params);\n                    await this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.DomContentLoadedEvent,\n                        params: {\n                            context: this.contextId,\n                            navigation: this.#loaderId,\n                            url: this.#url,\n                        },\n                    }, this.contextId);\n                    break;\n                case 'load':\n                    this.#targetDefers.Page.lifecycleEvent.load.resolve(params);\n                    await this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.LoadEvent,\n                        params: {\n                            context: this.contextId,\n                            navigation: this.#loaderId,\n                            url: this.#url,\n                        },\n                    }, this.contextId);\n                    break;\n            }\n        });\n        this.#cdpClient.on('Runtime.executionContextCreated', (params) => {\n            if (params.context.auxData.frameId !== this.contextId) {\n                return;\n            }\n            // Only this execution contexts are supported for now.\n            if (!['default', 'isolated'].includes(params.context.auxData.type)) {\n                return;\n            }\n            const realm = realm_js_1.Realm.create(params.context.uniqueId, this.contextId, params.context.id, this.#getOrigin(params), \n            // TODO: differentiate types.\n            realm_js_1.RealmType.window, \n            // Sandbox name for isolated world.\n            params.context.auxData.type === 'isolated'\n                ? params.context.name\n                : undefined, this.#cdpSessionId, this.#cdpClient);\n            if (params.context.auxData.isDefault) {\n                this.#maybeDefaultRealm = realm;\n            }\n        });\n        this.#cdpClient.on('Runtime.executionContextDestroyed', (params) => {\n            realm_js_1.Realm.findRealms({\n                cdpSessionId: this.#cdpSessionId,\n                executionContextId: params.executionContextId,\n            }).map((realm) => realm.delete());\n        });\n    }\n    #getOrigin(params) {\n        if (params.context.auxData.type === 'isolated') {\n            // Sandbox should have the same origin as the context itself, but in CDP\n            // it has an empty one.\n            return this.#defaultRealm.origin;\n        }\n        // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n        return ['://', ''].includes(params.context.origin)\n            ? 'null'\n            : params.context.origin;\n    }\n    #documentChanged(loaderId) {\n        if (this.#loaderId === loaderId) {\n            return;\n        }\n        if (!this.#targetDefers.documentInitialized.isFinished) {\n            this.#targetDefers.documentInitialized.reject('Document changed');\n        }\n        this.#targetDefers.documentInitialized = new deferred_js_1.Deferred();\n        if (!this.#targetDefers.Page.navigatedWithinDocument.isFinished) {\n            this.#targetDefers.Page.navigatedWithinDocument.reject('Document changed');\n        }\n        this.#targetDefers.Page.navigatedWithinDocument =\n            new deferred_js_1.Deferred();\n        if (!this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded.isFinished) {\n            this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded.reject('Document changed');\n        }\n        this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded =\n            new deferred_js_1.Deferred();\n        if (!this.#targetDefers.Page.lifecycleEvent.load.isFinished) {\n            this.#targetDefers.Page.lifecycleEvent.load.reject('Document changed');\n        }\n        this.#targetDefers.Page.lifecycleEvent.load =\n            new deferred_js_1.Deferred();\n        this.#loaderId = loaderId;\n    }\n    async navigate(url, wait) {\n        await this.#targetDefers.targetUnblocked;\n        // TODO: handle loading errors.\n        const cdpNavigateResult = await this.#cdpClient.sendCommand('Page.navigate', {\n            url,\n            frameId: this.contextId,\n        });\n        if (cdpNavigateResult.errorText) {\n            throw new protocol_js_1.Message.UnknownException(cdpNavigateResult.errorText);\n        }\n        if (cdpNavigateResult.loaderId !== undefined &&\n            cdpNavigateResult.loaderId !== this.#loaderId) {\n            this.#documentChanged(cdpNavigateResult.loaderId);\n        }\n        // Wait for `wait` condition.\n        switch (wait) {\n            case 'none':\n                break;\n            case 'interactive':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#targetDefers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#targetDefers.Page.lifecycleEvent.DOMContentLoaded;\n                }\n                break;\n            case 'complete':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#targetDefers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#targetDefers.Page.lifecycleEvent.load;\n                }\n                break;\n            default:\n                throw new Error(`Not implemented wait '${wait}'`);\n        }\n        return {\n            result: {\n                navigation: cdpNavigateResult.loaderId || null,\n                url: url,\n            },\n        };\n    }\n    async getOrCreateSandbox(sandbox) {\n        if (sandbox === undefined || sandbox === '') {\n            return this.#defaultRealm;\n        }\n        let maybeSandboxes = realm_js_1.Realm.findRealms({\n            browsingContextId: this.contextId,\n            sandbox,\n        });\n        if (maybeSandboxes.length == 0) {\n            await this.#cdpClient.sendCommand('Page.createIsolatedWorld', {\n                frameId: this.contextId,\n                worldName: sandbox,\n            });\n            // `Runtime.executionContextCreated` should be emitted by the time the\n            // previous command is done.\n            maybeSandboxes = realm_js_1.Realm.findRealms({\n                browsingContextId: this.contextId,\n                sandbox,\n            });\n        }\n        if (maybeSandboxes.length !== 1) {\n            throw Error(`Sandbox ${sandbox} wasn't created.`);\n        }\n        return maybeSandboxes[0];\n    }\n}\nexports.BrowsingContextImpl = BrowsingContextImpl;\n//# sourceMappingURL=browsingContextImpl.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextProcessor = void 0;\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst browsingContextImpl_js_1 = require(\"./browsingContextImpl.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nconst browsingContextStorage_js_1 = require(\"./browsingContextStorage.js\");\nconst logContext = (0, log_js_1.log)(log_js_1.LogType.browsingContexts);\nclass BrowsingContextProcessor {\n    sessions = new Set();\n    #cdpConnection;\n    #selfTargetId;\n    #eventManager;\n    constructor(cdpConnection, selfTargetId, eventManager) {\n        this.#cdpConnection = cdpConnection;\n        this.#selfTargetId = selfTargetId;\n        this.#eventManager = eventManager;\n        this.#setBrowserClientEventListeners(this.#cdpConnection.browserClient());\n    }\n    #setBrowserClientEventListeners(browserClient) {\n        this.#setTargetEventListeners(browserClient);\n    }\n    #setTargetEventListeners(cdpClient) {\n        cdpClient.on('Target.attachedToTarget', async (params) => {\n            await this.#handleAttachedToTargetEvent(params, cdpClient);\n        });\n        cdpClient.on('Target.detachedFromTarget', async (params) => {\n            await BrowsingContextProcessor.#handleDetachedFromTargetEvent(params);\n        });\n    }\n    #setSessionEventListeners(sessionId) {\n        if (this.sessions.has(sessionId)) {\n            return;\n        }\n        this.sessions.add(sessionId);\n        const sessionCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        this.#setTargetEventListeners(sessionCdpClient);\n        sessionCdpClient.on('*', async (method, params) => {\n            await this.#eventManager.registerEvent({\n                method: protocol_js_1.CDP.EventNames.EventReceivedEvent,\n                params: {\n                    cdpMethod: method,\n                    cdpParams: params || {},\n                    cdpSession: sessionId,\n                },\n            }, null);\n        });\n        sessionCdpClient.on('Page.frameAttached', async (params) => {\n            await browsingContextImpl_js_1.BrowsingContextImpl.createFrameContext(params.frameId, params.parentFrameId, sessionCdpClient, sessionId, this.#eventManager);\n        });\n    }\n    async #handleAttachedToTargetEvent(params, parentSessionCdpClient) {\n        const { sessionId, targetInfo } = params;\n        let targetSessionCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        if (!this.#isValidTarget(targetInfo)) {\n            // DevTools or some other not supported by BiDi target.\n            await targetSessionCdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n            await parentSessionCdpClient.sendCommand('Target.detachFromTarget', params);\n            return;\n        }\n        logContext('AttachedToTarget event received: ' + JSON.stringify(params));\n        this.#setSessionEventListeners(sessionId);\n        if (browsingContextStorage_js_1.BrowsingContextStorage.hasKnownContext(targetInfo.targetId)) {\n            // OOPiF.\n            browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(targetInfo.targetId).convertFrameToTargetContext(targetSessionCdpClient, sessionId);\n        }\n        else {\n            await browsingContextImpl_js_1.BrowsingContextImpl.createTargetContext(targetInfo.targetId, null, targetSessionCdpClient, sessionId, params.targetInfo.browserContextId ?? null, this.#eventManager);\n        }\n    }\n    // { \"method\": \"Target.detachedFromTarget\",\n    //   \"params\": {\n    //     \"sessionId\": \"7EFBFB2A4942A8989B3EADC561BC46E9\",\n    //     \"targetId\": \"19416886405CBA4E03DBB59FA67FF4E8\" } }\n    static async #handleDetachedFromTargetEvent(params) {\n        // TODO: params.targetId is deprecated. Update this class to track using\n        // params.sessionId instead.\n        // https://github.com/GoogleChromeLabs/chromium-bidi/issues/60\n        const contextId = params.targetId;\n        await browsingContextStorage_js_1.BrowsingContextStorage.findContext(contextId)?.delete();\n    }\n    async process_browsingContext_getTree(params) {\n        const resultContexts = params.root === undefined\n            ? browsingContextStorage_js_1.BrowsingContextStorage.getTopLevelContexts()\n            : [browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(params.root)];\n        return {\n            result: {\n                contexts: resultContexts.map((c) => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE)),\n            },\n        };\n    }\n    async process_browsingContext_create(params) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        let referenceContext = undefined;\n        if (params.referenceContext !== undefined) {\n            referenceContext = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(params.referenceContext);\n            if (referenceContext.parentId !== null) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`referenceContext should be a top-level context`);\n            }\n        }\n        const result = await browserCdpClient.sendCommand('Target.createTarget', {\n            url: 'about:blank',\n            newWindow: params.type === 'window',\n            ...(referenceContext?.cdpBrowserContextId\n                ? { browserContextId: referenceContext.cdpBrowserContextId }\n                : {}),\n        });\n        // Wait for the new tab to be loaded to avoid race conditions in the\n        // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n        // `browsingContext.load` events from the initial `about:blank` navigation\n        // are emitted after the next navigation is started.\n        // Details: https://github.com/web-platform-tests/wpt/issues/35846\n        const contextId = result.targetId;\n        const context = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(contextId);\n        await context.awaitLoaded();\n        return {\n            result: context.serializeToBidiValue(1),\n        };\n    }\n    async process_browsingContext_navigate(params) {\n        const context = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(params.context);\n        return await context.navigate(params.url, params.wait !== undefined ? params.wait : 'none');\n    }\n    static async #getRealm(target) {\n        if ('realm' in target) {\n            return realm_js_1.Realm.getRealm({ realmId: target.realm });\n        }\n        const context = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(target.context);\n        return await context.getOrCreateSandbox(target.sandbox);\n    }\n    async process_script_evaluate(params) {\n        const realm = await BrowsingContextProcessor.#getRealm(params.target);\n        return await realm.scriptEvaluate(params.expression, params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    process_script_getRealms(params) {\n        if (params.context !== undefined) {\n            // Make sure the context is known.\n            browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(params.context);\n        }\n        const realms = realm_js_1.Realm.findRealms({\n            browsingContextId: params.context,\n            type: params.type,\n        }).map((realm) => realm.toBiDi());\n        return { result: { realms } };\n    }\n    async process_script_callFunction(params) {\n        const realm = await BrowsingContextProcessor.#getRealm(params.target);\n        return await realm.callFunction(params.functionDeclaration, params.this || {\n            type: 'undefined',\n        }, // `this` is `undefined` by default.\n        params.arguments || [], // `arguments` is `[]` by default.\n        params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    async process_script_disown(params) {\n        const realm = await BrowsingContextProcessor.#getRealm(params.target);\n        await Promise.all(params.handles.map(async (h) => await realm.disown(h)));\n        return { result: {} };\n    }\n    async process_browsingContext_close(commandParams) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        const context = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(commandParams.context);\n        if (context.parentId !== null) {\n            throw new protocol_js_1.Message.InvalidArgumentException('Not a top-level browsing context cannot be closed.');\n        }\n        const detachedFromTargetPromise = new Promise(async (resolve) => {\n            const onContextDestroyed = (eventParams) => {\n                if (eventParams.targetId === commandParams.context) {\n                    browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n                    resolve();\n                }\n            };\n            browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n        });\n        await this.#cdpConnection\n            .browserClient()\n            .sendCommand('Target.closeTarget', {\n            targetId: commandParams.context,\n        });\n        // Sometimes CDP command finishes before `detachedFromTarget` event,\n        // sometimes after. Wait for the CDP command to be finished, and then wait\n        // for `detachedFromTarget` if it hasn't emitted.\n        await detachedFromTargetPromise;\n        return { result: {} };\n    }\n    #isValidTarget(target) {\n        if (target.targetId === this.#selfTargetId) {\n            return false;\n        }\n        return ['page', 'iframe'].includes(target.type);\n    }\n    async process_cdp_sendCommand(params) {\n        const client = params.cdpSession\n            ? this.#cdpConnection.getCdpClient(params.cdpSession)\n            : this.#cdpConnection.browserClient();\n        const sendCdpCommandResult = await client.sendCommand(params.cdpMethod, params.cdpParams);\n        return {\n            result: sendCdpCommandResult,\n            cdpSession: params.cdpSession,\n        };\n    }\n    async process_cdp_getSession(params) {\n        const context = params.context;\n        const sessionId = browsingContextStorage_js_1.BrowsingContextStorage.getKnownContext(context).cdpSessionId;\n        if (sessionId === undefined) {\n            return { result: { cdpSession: null } };\n        }\n        return { result: { cdpSession: sessionId } };\n    }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;\n//# sourceMappingURL=browsingContextProcessor.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandProcessor = void 0;\nconst browsingContextProcessor_js_1 = require(\"./domains/context/browsingContextProcessor.js\");\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst OutgoindBidiMessage_js_1 = require(\"./OutgoindBidiMessage.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nclass BidiNoOpParser {\n    parseGetRealmsParams(params) {\n        return params;\n    }\n    parseCallFunctionParams(params) {\n        return params;\n    }\n    parseEvaluateParams(params) {\n        return params;\n    }\n    parseDisownParams(params) {\n        return params;\n    }\n    parseSendCommandParams(params) {\n        return params;\n    }\n    parseGetSessionParams(params) {\n        return params;\n    }\n    parseNavigateParams(params) {\n        return params;\n    }\n    parseGetTreeParams(params) {\n        return params;\n    }\n    parseSubscribeParams(params) {\n        return params;\n    }\n    parseCreateParams(params) {\n        return params;\n    }\n    parseCloseParams(params) {\n        return params;\n    }\n}\nclass CommandProcessor extends EventEmitter_js_1.EventEmitter {\n    #contextProcessor;\n    #eventManager;\n    #parser;\n    constructor(cdpConnection, eventManager, selfTargetId, parser = new BidiNoOpParser()) {\n        super();\n        this.#eventManager = eventManager;\n        this.#contextProcessor = new browsingContextProcessor_js_1.BrowsingContextProcessor(cdpConnection, selfTargetId, eventManager);\n        this.#parser = parser;\n    }\n    // noinspection JSMethodCanBeStatic,JSUnusedLocalSymbols\n    async #process_session_status() {\n        return { result: { ready: false, message: 'already connected' } };\n    }\n    async #process_session_subscribe(params, channel) {\n        await this.#eventManager.subscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #process_session_unsubscribe(params, channel) {\n        await this.#eventManager.unsubscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #processCommand(commandData) {\n        switch (commandData.method) {\n            case 'session.status':\n                return await this.#process_session_status();\n            case 'session.subscribe':\n                return await this.#process_session_subscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'session.unsubscribe':\n                return await this.#process_session_unsubscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'browsingContext.create':\n                return await this.#contextProcessor.process_browsingContext_create(this.#parser.parseCreateParams(commandData.params));\n            case 'browsingContext.close':\n                return await this.#contextProcessor.process_browsingContext_close(this.#parser.parseCloseParams(commandData.params));\n            case 'browsingContext.getTree':\n                return await this.#contextProcessor.process_browsingContext_getTree(this.#parser.parseGetTreeParams(commandData.params));\n            case 'browsingContext.navigate':\n                return await this.#contextProcessor.process_browsingContext_navigate(this.#parser.parseNavigateParams(commandData.params));\n            case 'script.getRealms':\n                return this.#contextProcessor.process_script_getRealms(this.#parser.parseGetRealmsParams(commandData.params));\n            case 'script.callFunction':\n                return await this.#contextProcessor.process_script_callFunction(this.#parser.parseCallFunctionParams(commandData.params));\n            case 'script.evaluate':\n                return await this.#contextProcessor.process_script_evaluate(this.#parser.parseEvaluateParams(commandData.params));\n            case 'script.disown':\n                return await this.#contextProcessor.process_script_disown(this.#parser.parseDisownParams(commandData.params));\n            case 'cdp.sendCommand':\n                return await this.#contextProcessor.process_cdp_sendCommand(this.#parser.parseSendCommandParams(commandData.params));\n            case 'cdp.getSession':\n                return await this.#contextProcessor.process_cdp_getSession(this.#parser.parseGetSessionParams(commandData.params));\n            default:\n                throw new protocol_js_1.Message.UnknownCommandException(`Unknown command '${commandData.method}'.`);\n        }\n    }\n    processCommand = async (command) => {\n        try {\n            const result = await this.#processCommand(command);\n            const response = {\n                id: command.id,\n                ...result,\n            };\n            this.emit('response', OutgoindBidiMessage_js_1.OutgoingBidiMessage.createResolved(response, command.channel ?? null));\n        }\n        catch (e) {\n            if (e instanceof protocol_js_1.Message.ErrorResponseClass) {\n                const errorResponse = e;\n                this.emit('response', OutgoindBidiMessage_js_1.OutgoingBidiMessage.createResolved(errorResponse.toErrorResponse(command.id), command.channel ?? null));\n            }\n            else {\n                const error = e;\n                console.error(error);\n                this.emit('response', OutgoindBidiMessage_js_1.OutgoingBidiMessage.createResolved(new protocol_js_1.Message.UnknownException(error.message).toErrorResponse(command.id), command.channel ?? null));\n            }\n        }\n    };\n}\nexports.CommandProcessor = CommandProcessor;\n//# sourceMappingURL=CommandProcessor.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst processingQueue_js_1 = require(\"../utils/processingQueue.js\");\nconst EventManager_js_1 = require(\"./domains/events/EventManager.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst browsingContextStorage_js_1 = require(\"./domains/context/browsingContextStorage.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n    #messageQueue;\n    #transport;\n    #commandProcessor;\n    constructor(bidiTransport, cdpConnection, selfTargetId, parser) {\n        super();\n        this.#messageQueue = new processingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage);\n        this.#transport = bidiTransport;\n        this.#transport.setOnMessage(this.#handleIncomingMessage);\n        this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(cdpConnection, new EventManager_js_1.EventManager(this), selfTargetId, parser);\n        this.#commandProcessor.on('response', (response) => {\n            this.emitOutgoingMessage(response);\n        });\n    }\n    static async createAndStart(bidiTransport, cdpConnection, selfTargetId, parser) {\n        const server = new BidiServer(bidiTransport, cdpConnection, selfTargetId, parser);\n        const cdpClient = cdpConnection.browserClient();\n        // Needed to get events about new targets.\n        await cdpClient.sendCommand('Target.setDiscoverTargets', { discover: true });\n        // Needed to automatically attach to new targets.\n        await cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await Promise.all(browsingContextStorage_js_1.BrowsingContextStorage.getTopLevelContexts().map((c) => c.awaitLoaded()));\n        return server;\n    }\n    #processOutgoingMessage = async (messageEntry) => {\n        const message = messageEntry.message;\n        if (messageEntry.channel !== null) {\n            message['channel'] = messageEntry.channel;\n        }\n        await this.#transport.sendMessage(message);\n    };\n    /**\n     * Sends BiDi message.\n     */\n    emitOutgoingMessage(messageEntry) {\n        this.#messageQueue.add(messageEntry);\n    }\n    close() {\n        this.#transport.close();\n    }\n    #handleIncomingMessage = async (message) => {\n        this.#commandProcessor.processCommand(message);\n    };\n}\nexports.BidiServer = BidiServer;\n//# sourceMappingURL=BidiServer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MapperTabPage = void 0;\nclass MapperTabPage {\n    // HTML source code for the user-facing Mapper tab.\n    static #mapperPageSource = '<!DOCTYPE html><title>BiDi-CDP Mapper</title><style>body{font-family: Roboto, serif; font-size: 13px; color: #202124;}.log{padding: 12px; font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace; font-size: 11px; line-height: 180%; background: #f1f3f4; border-radius: 4px;}.pre{overflow-wrap: break-word; padding: 10px;}.card{margin: 60px auto; padding: 2px 0; max-width: 900px; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15), 0 1px 6px rgba(0, 0, 0, 0.2); border-radius: 8px;}.divider{height: 1px; background: #f0f0f0;}.item{padding: 16px 20px;}</style><div class=\"card\"><div class=\"item\"><h1>BiDi-CDP Mapper is controlling this tab</h1><p>Closing or reloading it will stop the BiDi process. <a target=\"_blank\" title=\"BiDi-CDP Mapper GitHub Repository\" href=\"https://github.com/GoogleChromeLabs/chromium-bidi\">Details.</a></p></div><div class=\"divider\"></div><details id=\"details\"><summary class=\"item\">Debug information</summary></details></div>';\n    static generatePage() {\n        // If run not in browser (e.g. unit test), do nothing.\n        if (!globalThis.document?.documentElement) {\n            return;\n        }\n        window.MapperTabPage = MapperTabPage;\n        window.document.documentElement.innerHTML = this.#mapperPageSource;\n        // Create main log containers in proper order.\n        this.#findOrCreateTypeLogContainer('System');\n        this.#findOrCreateTypeLogContainer('BiDi Messages');\n        this.#findOrCreateTypeLogContainer('Browsing Contexts');\n        this.#findOrCreateTypeLogContainer('CDP');\n    }\n    static log(logType, ...messages) {\n        // If run not in browser (e.g. unit test), do nothing.\n        if (!globalThis.document?.documentElement) {\n            return;\n        }\n        const typeLogContainer = this.#findOrCreateTypeLogContainer(logType);\n        // This piece of HTML should be added:\n        /*\n          <div class=\"pre\">...log message...</div>\n        */\n        const lineElement = document.createElement('div');\n        lineElement.className = 'pre';\n        lineElement.textContent = messages.join(', ');\n        typeLogContainer.appendChild(lineElement);\n    }\n    // This piece of HTML should be added to the `debug` element:\n    /*\n        <div class=\"divider\"></div>\n        <div class=\"item\">\n          <h3>${name}</h3>\n          <div id=\"${name}_log\" class=\"log\">\n    */\n    static #findOrCreateTypeLogContainer(logType) {\n        const containerId = logType + '_log';\n        const existingContainer = document.getElementById(containerId);\n        if (existingContainer) {\n            return existingContainer;\n        }\n        const debugElement = document.getElementById('details');\n        const divider = document.createElement('div');\n        divider.className = 'divider';\n        debugElement.appendChild(divider);\n        const htmlItem = document.createElement('div');\n        htmlItem.className = 'item';\n        htmlItem.innerHTML = `<h3>${logType}</h3><div id=\"${containerId}\" class=\"log\"></div>`;\n        debugElement.appendChild(htmlItem);\n        return document.getElementById(containerId);\n    }\n}\nexports.MapperTabPage = MapperTabPage;\n//# sourceMappingURL=mapperTabPage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.util = void 0;\nvar util;\n(function (util) {\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n})(util = exports.util || (exports.util = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setErrorMap = exports.overrideErrorMap = exports.defaultErrorMap = exports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, null, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\nconst defaultErrorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case exports.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case exports.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected)}`;\n            break;\n        case exports.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case exports.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case exports.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case exports.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case exports.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case exports.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case exports.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case exports.ZodIssueCode.invalid_string:\n            if (issue.validation !== \"regex\")\n                message = `Invalid ${issue.validation}`;\n            else\n                message = \"Invalid\";\n            break;\n        case exports.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be greater than ${issue.inclusive ? `or equal to ` : ``}${issue.minimum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case exports.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be less than ${issue.inclusive ? `or equal to ` : ``}${issue.maximum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case exports.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case exports.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case exports.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.defaultErrorMap = defaultErrorMap;\nexports.overrideErrorMap = exports.defaultErrorMap;\nconst setErrorMap = (map) => {\n    exports.overrideErrorMap = map;\n};\nexports.setErrorMap = setErrorMap;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst ZodError_1 = require(\"../ZodError\");\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = exports.makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            ZodError_1.overrideErrorMap,\n            ZodError_1.defaultErrorMap,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\nexports.isAsync = isAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodNaN = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.objectUtil = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = void 0;\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (parseUtil_1.isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError_1.ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid\" or \"required\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\" && required_error)\n            return { message: required_error };\n        if (params.invalid_type_error)\n            return { message: params.invalid_type_error };\n        return { message: ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this.superRefine = this._refinement;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.default = this.default.bind(this);\n        this.describe = this.describe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return util_1.getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: util_1.getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: util_1.getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (parseUtil_1.isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: util_1.getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: util_1.getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: [], parent: ctx });\n        const result = await (parseUtil_1.isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = -Infinity;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min) {\n                    min = ch.value;\n                }\n            }\n        });\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max) {\n                    max = ch.value;\n                }\n            }\n        });\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return {\n            status: \"valid\",\n            value: new Date(input.data.getTime()),\n        };\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        parseUtil_1.addIssueToContext(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        for (const key in ctx.data) {\n            if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    parseUtil_1.addIssueToContext(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).map((key) => {\n            if (util_1.util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util_1.util.objectKeys(this.shape).map((key) => {\n                if (util_1.util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required() {\n        const newShape = {};\n        for (const key in this.shape) {\n            const fieldSchema = this.shape[key];\n            let newField = fieldSchema;\n            while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n            }\n            newShape[key] = newField;\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.options.get(discriminatorValue);\n        if (!option) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: this.validDiscriminatorValues,\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get validDiscriminatorValues() {\n        return Array.from(this.options.keys());\n    }\n    get options() {\n        return this._def.options;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, types, params) {\n        // Get all the valid discriminator values\n        const options = new Map();\n        try {\n            types.forEach((type) => {\n                const discriminatorValue = type.shape[discriminator].value;\n                options.set(discriminatorValue, type);\n            });\n        }\n        catch (e) {\n            throw new Error(\"The discriminator value could not be extracted from all the provided schemas\");\n        }\n        // Assert that all the discriminator values are unique\n        if (options.size !== types.length) {\n            throw new Error(\"Some of the discriminator values are not unique\");\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = util_1.getParsedType(a);\n    const bType = util_1.getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (parseUtil_1.isAborted(parsedLeft) || parseUtil_1.isAborted(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if (parseUtil_1.isDirty(parsedLeft) || parseUtil_1.isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                parseUtil_1.addIssueToContext(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return parseUtil_1.makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    ZodError_1.overrideErrorMap,\n                    ZodError_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return parseUtil_1.makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    ZodError_1.overrideErrorMap,\n                    ZodError_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return parseUtil_1.OK(async (...args) => {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return parseUtil_1.OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n}\nexports.ZodFunction = ZodFunction;\nZodFunction.create = (args, returns, params) => {\n    return new ZodFunction({\n        args: (args\n            ? args.rest(ZodUnknown.create())\n            : ZodTuple.create([]).rest(ZodUnknown.create())),\n        returns: returns || ZodUnknown.create(),\n        typeName: ZodFirstPartyTypeKind.ZodFunction,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            parseUtil_1.addIssueToContext(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            parseUtil_1.addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            parseUtil_1.addIssueToContext(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            parseUtil_1.addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return parseUtil_1.OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return parseUtil_1.OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                parseUtil_1.addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!parseUtil_1.isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!parseUtil_1.isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return parseUtil_1.OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return parseUtil_1.OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            parseUtil_1.addIssueToContext(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => exports.custom((data) => data instanceof cls, params, true);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodParsedType = exports.getParsedType = void 0;\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\nvar util_1 = require(\"./helpers/util\");\nObject.defineProperty(exports, \"getParsedType\", { enumerable: true, get: function () { return util_1.getParsedType; } });\nObject.defineProperty(exports, \"ZodParsedType\", { enumerable: true, get: function () { return util_1.ZodParsedType; } });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst mod = __importStar(require(\"./external\"));\nexports.z = mod;\n__exportStar(require(\"./external\"), exports);\nexports.default = mod;\n","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.CDP = exports.Log = exports.BrowsingContext = exports.Script = exports.CommonDataTypes = exports.parseObject = void 0;\n/**\n * @file Provides parsing and validator for WebDriver BiDi protocol.\n * Parser types should match the `../protocol` types.\n */\nconst MAX_INT = 9007199254740991;\nconst zod_1 = require(\"zod\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst logParser = (0, log_js_1.log)(log_js_1.LogType.commandParser);\nfunction parseObject(obj, schema) {\n    const parseResult = schema.safeParse(obj);\n    if (parseResult.success) {\n        return parseResult.data;\n    }\n    logParser(`Command ${JSON.stringify(obj)} parse failed: ${JSON.stringify(parseResult)}.`);\n    const errorMessage = parseResult.error.errors\n        .map((e) => `${e.message} in ` +\n        `${e.path.map((p) => JSON.stringify(p)).join('/')}.`)\n        .join(' ');\n    throw new protocol_js_1.Message.InvalidArgumentException(errorMessage);\n}\nexports.parseObject = parseObject;\nvar CommonDataTypes;\n(function (CommonDataTypes) {\n    CommonDataTypes.RemoteReferenceSchema = zod_1.z.object({\n        handle: zod_1.z.string().min(1),\n    });\n    // UndefinedValue = {\n    //   type: \"undefined\",\n    // }\n    const UndefinedValueSchema = zod_1.z.object({ type: zod_1.z.literal('undefined') });\n    //\n    // NullValue = {\n    //   type: \"null\",\n    // }\n    const NullValueSchema = zod_1.z.object({ type: zod_1.z.literal('null') });\n    // StringValue = {\n    //   type: \"string\",\n    //   value: text,\n    // }\n    const StringValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('string'),\n        value: zod_1.z.string(),\n    });\n    // SpecialNumber = \"NaN\" / \"-0\" / \"+Infinity\" / \"-Infinity\";\n    const SpecialNumberSchema = zod_1.z.enum([\n        'NaN',\n        '-0',\n        'Infinity',\n        '+Infinity',\n        '-Infinity',\n    ]);\n    //\n    // NumberValue = {\n    //   type: \"number\",\n    //   value: number / SpecialNumber,\n    // }\n    const NumberValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('number'),\n        value: zod_1.z.union([SpecialNumberSchema, zod_1.z.number()]),\n    });\n    // BooleanValue = {\n    //   type: \"boolean\",\n    //   value: bool,\n    // }\n    const BooleanValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('boolean'),\n        value: zod_1.z.boolean(),\n    });\n    // BigIntValue = {\n    //   type: \"bigint\",\n    //   value: text,\n    // }\n    const BigIntValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('bigint'),\n        value: zod_1.z.string(),\n    });\n    const PrimitiveProtocolValueSchema = zod_1.z.union([\n        UndefinedValueSchema,\n        NullValueSchema,\n        StringValueSchema,\n        NumberValueSchema,\n        BooleanValueSchema,\n        BigIntValueSchema,\n    ]);\n    CommonDataTypes.LocalValueSchema = zod_1.z.lazy(() => zod_1.z.union([\n        PrimitiveProtocolValueSchema,\n        ArrayLocalValueSchema,\n        DateLocalValueSchema,\n        MapLocalValueSchema,\n        ObjectLocalValueSchema,\n        RegExpLocalValueSchema,\n        SetLocalValueSchema,\n    ]));\n    // Order is important, as `parse` is processed in the same order.\n    // `RemoteReferenceSchema` has higher priority.\n    const LocalOrRemoteValueSchema = zod_1.z.union([\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    // ListLocalValue = [*LocalValue];\n    const ListLocalValueSchema = zod_1.z.array(LocalOrRemoteValueSchema);\n    // ArrayLocalValue = {\n    //   type: \"array\",\n    //   value: ListLocalValue,\n    // }\n    const ArrayLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('array'),\n        value: ListLocalValueSchema,\n    }));\n    // DateLocalValue = {\n    //   type: \"date\",\n    //   value: text\n    // }\n    const DateLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('date'),\n        value: zod_1.z.string().min(1),\n    });\n    // MappingLocalValue = [*[(LocalValue / text), LocalValue]];\n    const MappingLocalValueSchema = zod_1.z.lazy(() => zod_1.z.tuple([\n        zod_1.z.union([zod_1.z.string(), LocalOrRemoteValueSchema]),\n        LocalOrRemoteValueSchema,\n    ]));\n    // MapLocalValue = {\n    //   type: \"map\",\n    //   value: MappingLocalValue,\n    // }\n    const MapLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('map'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // ObjectLocalValue = {\n    //   type: \"object\",\n    //   value: MappingLocalValue,\n    // }\n    const ObjectLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('object'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // RegExpLocalValue = {\n    //   type: \"regexp\",\n    //   value: RegExpValue,\n    // }\n    const RegExpLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('regexp'),\n        value: zod_1.z.object({\n            pattern: zod_1.z.string(),\n            flags: zod_1.z.string().optional(),\n        }),\n    }));\n    // SetLocalValue = {\n    //   type: \"set\",\n    //   value: ListLocalValue,\n    // }\n    const SetLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('set'),\n        value: ListLocalValueSchema,\n    }));\n    // BrowsingContext = text;\n    CommonDataTypes.BrowsingContextSchema = zod_1.z.string();\n})(CommonDataTypes = exports.CommonDataTypes || (exports.CommonDataTypes = {}));\nvar Script;\n(function (Script) {\n    const RealmTypeSchema = zod_1.z.enum([\n        'window',\n        'dedicated-worker',\n        'shared-worker',\n        'service-worker',\n        'worker',\n        'paint-worklet',\n        'audio-worklet',\n        'worklet',\n    ]);\n    Script.GetRealmsParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n        type: RealmTypeSchema.optional(),\n    });\n    function parseGetRealmsParams(params) {\n        return parseObject(params, Script.GetRealmsParametersSchema);\n    }\n    Script.parseGetRealmsParams = parseGetRealmsParams;\n    // ContextTarget = {\n    //   context: BrowsingContext,\n    //   ?sandbox: text\n    // }\n    const ContextTargetSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        sandbox: zod_1.z.string().optional(),\n    });\n    // RealmTarget = {realm: Realm};\n    const RealmTargetSchema = zod_1.z.object({\n        realm: zod_1.z.string().min(1),\n    });\n    //\n    // Target = (\n    //   RealmTarget //\n    //   ContextTarget\n    // );\n    // Order is important, as `parse` is processed in the same order.\n    // `RealmTargetSchema` has higher priority.\n    const TargetSchema = zod_1.z.union([RealmTargetSchema, ContextTargetSchema]);\n    const OwnershipModelSchema = zod_1.z.enum(['root', 'none']);\n    // ScriptEvaluateParameters = {\n    //   expression: text;\n    //   target: Target;\n    //   ?awaitPromise: bool;\n    //   ?resultOwnership: OwnershipModel;\n    // }\n    const EvaluateParametersSchema = zod_1.z.object({\n        expression: zod_1.z.string(),\n        awaitPromise: zod_1.z.boolean(),\n        target: TargetSchema,\n        resultOwnership: OwnershipModelSchema.optional(),\n    });\n    function parseEvaluateParams(params) {\n        return parseObject(params, EvaluateParametersSchema);\n    }\n    Script.parseEvaluateParams = parseEvaluateParams;\n    const DisownParametersSchema = zod_1.z.object({\n        target: TargetSchema,\n        handles: zod_1.z.array(zod_1.z.string()),\n    });\n    function parseDisownParams(params) {\n        return parseObject(params, DisownParametersSchema);\n    }\n    Script.parseDisownParams = parseDisownParams;\n    const ArgumentValueSchema = zod_1.z.union([\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    const ScriptCallFunctionParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        target: TargetSchema,\n        arguments: zod_1.z.array(ArgumentValueSchema).optional(),\n        this: ArgumentValueSchema.optional(),\n        awaitPromise: zod_1.z.boolean(),\n        resultOwnership: OwnershipModelSchema.optional(),\n    });\n    function parseCallFunctionParams(params) {\n        return parseObject(params, ScriptCallFunctionParametersSchema);\n    }\n    Script.parseCallFunctionParams = parseCallFunctionParams;\n})(Script = exports.Script || (exports.Script = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    const GetTreeParametersSchema = zod_1.z.object({\n        maxDepth: zod_1.z.number().int().nonnegative().max(MAX_INT).optional(),\n        root: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseGetTreeParams(params) {\n        return parseObject(params, GetTreeParametersSchema);\n    }\n    BrowsingContext.parseGetTreeParams = parseGetTreeParams;\n    const ReadinessStateSchema = zod_1.z.enum(['none', 'interactive', 'complete']);\n    // BrowsingContextNavigateParameters = {\n    //   context: BrowsingContext,\n    //   url: text,\n    //   ?wait: ReadinessState,\n    // }\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const NavigateParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        url: zod_1.z.string().url(),\n        wait: ReadinessStateSchema.optional(),\n    });\n    function parseNavigateParams(params) {\n        return parseObject(params, NavigateParametersSchema);\n    }\n    BrowsingContext.parseNavigateParams = parseNavigateParams;\n    // BrowsingContextCreateType = \"tab\" / \"window\"\n    //\n    // BrowsingContextCreateParameters = {\n    //   type: BrowsingContextCreateType\n    // }\n    const CreateParametersSchema = zod_1.z.object({\n        type: zod_1.z.enum(['tab', 'window']),\n        referenceContext: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseCreateParams(params) {\n        return parseObject(params, CreateParametersSchema);\n    }\n    BrowsingContext.parseCreateParams = parseCreateParams;\n    // BrowsingContextCloseParameters = {\n    //   context: BrowsingContext\n    // }\n    const CloseParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCloseParams(params) {\n        return parseObject(params, CloseParametersSchema);\n    }\n    BrowsingContext.parseCloseParams = parseCloseParams;\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n// https://w3c.github.io/webdriver-bidi/#module-log\nvar Log;\n(function (Log) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar CDP;\n(function (CDP) {\n    const SendCommandParamsSchema = zod_1.z.object({\n        cdpMethod: zod_1.z.string(),\n        // `passthrough` allows object to have any fields.\n        // https://github.com/colinhacks/zod#passthrough\n        cdpParams: zod_1.z.object({}).passthrough(),\n        cdpSession: zod_1.z.string().optional(),\n    });\n    function parseSendCommandParams(params) {\n        return parseObject(params, SendCommandParamsSchema);\n    }\n    CDP.parseSendCommandParams = parseSendCommandParams;\n    const GetSessionParamsSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseGetSessionParams(params) {\n        return parseObject(params, GetSessionParamsSchema);\n    }\n    CDP.parseGetSessionParams = parseGetSessionParams;\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\nvar Session;\n(function (Session) {\n    const EventNameSchema = zod_1.z.enum([\n        BrowsingContext.EventNames.ContextCreatedEvent,\n        BrowsingContext.EventNames.ContextDestroyedEvent,\n        BrowsingContext.EventNames.DomContentLoadedEvent,\n        BrowsingContext.EventNames.LoadEvent,\n        Log.EventNames.LogEntryAddedEvent,\n        CDP.EventNames.EventReceivedEvent,\n    ]);\n    // SessionSubscribeParameters = {\n    //   events: [*text],\n    //   ?contexts: [*BrowsingContext],\n    // }\n    const SubscribeParametersSchema = zod_1.z.object({\n        events: zod_1.z.array(EventNameSchema),\n        contexts: zod_1.z.array(CommonDataTypes.BrowsingContextSchema).optional(),\n    });\n    function parseSubscribeParams(params) {\n        return parseObject(params, SubscribeParametersSchema);\n    }\n    Session.parseSubscribeParams = parseSubscribeParams;\n})(Session = exports.Session || (exports.Session = {}));\n//# sourceMappingURL=protocol-parser.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_js_1 = require(\"../cdp/index.js\");\nconst BidiServer_js_1 = require(\"../bidiMapper/BidiServer.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst mapperTabPage_js_1 = require(\"./mapperTabPage.js\");\nconst OutgoindBidiMessage_js_1 = require(\"../bidiMapper/OutgoindBidiMessage.js\");\nconst Parser = __importStar(require(\"../protocol-parser/protocol-parser.js\"));\nconst logSystem = (0, log_js_1.log)(log_js_1.LogType.system);\nconst logBidi = (0, log_js_1.log)(log_js_1.LogType.bidi);\n// Initiate `setSelfTargetId` as soon as possible to prevent race condition.\nconst _waitSelfTargetIdPromise = _waitSelfTargetId();\n(async () => {\n    mapperTabPage_js_1.MapperTabPage.generatePage();\n    // Needed to filter out info related to BiDi target.\n    const selfTargetId = await _waitSelfTargetIdPromise;\n    const bidiServer = await _createBidiServer(selfTargetId);\n    logSystem('launched');\n    bidiServer.emitOutgoingMessage(OutgoindBidiMessage_js_1.OutgoingBidiMessage.createResolved({ launched: true }, null));\n})();\nfunction _createCdpConnection() {\n    // A CdpTransport implementation that uses the window.cdp bindings\n    // injected by Target.exposeDevToolsProtocol.\n    class WindowCdpTransport {\n        _onMessage = null;\n        constructor() {\n            window.cdp.onmessage = (message) => {\n                if (this._onMessage) {\n                    this._onMessage.call(null, message);\n                }\n            };\n        }\n        setOnMessage(onMessage) {\n            this._onMessage = onMessage;\n        }\n        async sendMessage(message) {\n            window.cdp.send(message);\n        }\n        close() {\n            this._onMessage = null;\n            window.cdp.onmessage = null;\n        }\n    }\n    return new index_js_1.CdpConnection(new WindowCdpTransport(), (0, log_js_1.log)(log_js_1.LogType.cdp));\n}\nasync function _createBidiServer(selfTargetId) {\n    class WindowBidiTransport {\n        _onMessage = null;\n        constructor() {\n            window.onBidiMessage = (messageStr) => {\n                logBidi('received < ', messageStr);\n                let messageObj;\n                try {\n                    messageObj = WindowBidiTransport.#parseBidiMessage(messageStr);\n                }\n                catch (e) {\n                    // Transport-level error does not provide channel.\n                    this.#respondWithError(messageStr, 'invalid argument', e.message, null);\n                    return;\n                }\n                if (this._onMessage) {\n                    this._onMessage.call(null, messageObj);\n                }\n            };\n        }\n        setOnMessage(onMessage) {\n            this._onMessage = onMessage;\n        }\n        async sendMessage(message) {\n            const messageStr = JSON.stringify(message);\n            logBidi('sent > ', messageStr);\n            window.sendBidiResponse(messageStr);\n        }\n        close() {\n            this._onMessage = null;\n            window.onBidiMessage = null;\n        }\n        #respondWithError(plainCommandData, errorCode, errorMessage, channel) {\n            const errorResponse = WindowBidiTransport.#getErrorResponse(plainCommandData, errorCode, errorMessage);\n            if (channel) {\n                // TODO: get rid of any, same code existed in BidiServer.\n                this.sendMessage({\n                    ...errorResponse,\n                    channel,\n                });\n            }\n            else {\n                this.sendMessage(errorResponse);\n            }\n        }\n        static #getJsonType(value) {\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return 'array';\n            }\n            return typeof value;\n        }\n        static #getErrorResponse(messageStr, errorCode, errorMessage) {\n            // TODO: this is bizarre per spec. We reparse the payload and\n            // extract the ID, regardless of what kind of value it was.\n            let messageId = undefined;\n            try {\n                const messageObj = JSON.parse(messageStr);\n                if (WindowBidiTransport.#getJsonType(messageObj) === 'object' &&\n                    'id' in messageObj) {\n                    messageId = messageObj.id;\n                }\n            }\n            catch { }\n            return {\n                id: messageId,\n                error: errorCode,\n                message: errorMessage,\n                // TODO: optional stacktrace field.\n            };\n        }\n        static #parseBidiMessage(messageStr) {\n            let messageObj;\n            try {\n                messageObj = JSON.parse(messageStr);\n            }\n            catch {\n                throw new Error('Cannot parse data as JSON');\n            }\n            const parsedType = WindowBidiTransport.#getJsonType(messageObj);\n            if (parsedType !== 'object') {\n                throw new Error(`Expected JSON object but got ${parsedType}`);\n            }\n            // Extract amd validate id, method and params.\n            const { id, method, params } = messageObj;\n            const idType = WindowBidiTransport.#getJsonType(id);\n            if (idType !== 'number' || !Number.isInteger(id) || id < 0) {\n                // TODO: should uint64_t be the upper limit?\n                // https://tools.ietf.org/html/rfc7049#section-2.1\n                throw new Error(`Expected unsigned integer but got ${idType}`);\n            }\n            const methodType = WindowBidiTransport.#getJsonType(method);\n            if (methodType !== 'string') {\n                throw new Error(`Expected string method but got ${methodType}`);\n            }\n            const paramsType = WindowBidiTransport.#getJsonType(params);\n            if (paramsType !== 'object') {\n                throw new Error(`Expected object params but got ${paramsType}`);\n            }\n            let channel = messageObj.channel;\n            if (channel !== undefined) {\n                const channelType = WindowBidiTransport.#getJsonType(channel);\n                if (channelType !== 'string') {\n                    throw new Error(`Expected string channel but got ${channelType}`);\n                }\n                // Empty string channel is considered as no channel provided.\n                if (channel === '') {\n                    channel = undefined;\n                }\n            }\n            return { id, method, params, channel };\n        }\n    }\n    return await BidiServer_js_1.BidiServer.createAndStart(new WindowBidiTransport(), _createCdpConnection(), selfTargetId, new BidiParserImpl());\n}\nclass BidiParserImpl {\n    parseGetRealmsParams(params) {\n        return Parser.Script.parseGetRealmsParams(params);\n    }\n    parseCallFunctionParams(params) {\n        return Parser.Script.parseCallFunctionParams(params);\n    }\n    parseEvaluateParams(params) {\n        return Parser.Script.parseEvaluateParams(params);\n    }\n    parseDisownParams(params) {\n        return Parser.Script.parseDisownParams(params);\n    }\n    parseSendCommandParams(params) {\n        return Parser.CDP.parseSendCommandParams(params);\n    }\n    parseGetSessionParams(params) {\n        return Parser.CDP.parseGetSessionParams(params);\n    }\n    parseNavigateParams(params) {\n        return Parser.BrowsingContext.parseNavigateParams(params);\n    }\n    parseGetTreeParams(params) {\n        return Parser.BrowsingContext.parseGetTreeParams(params);\n    }\n    parseSubscribeParams(params) {\n        return Parser.Session.parseSubscribeParams(params);\n    }\n    parseCreateParams(params) {\n        return Parser.BrowsingContext.parseCreateParams(params);\n    }\n    parseCloseParams(params) {\n        return Parser.BrowsingContext.parseCloseParams(params);\n    }\n}\n// Needed to filter out info related to BiDi target.\nasync function _waitSelfTargetId() {\n    return await new Promise((resolve) => {\n        window.setSelfTargetId = function (targetId) {\n            logSystem('current target ID: ' + targetId);\n            resolve(targetId);\n        };\n    });\n}\n//# sourceMappingURL=bidiTab.js.map"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","EventEmitter_1","value","EventEmitter","mitt_1","n","all","Map","on","e","t","i","get","push","set","off","splice","indexOf","emit","slice","map","EventEmitter$1","emitter","type","handler","once","event","onceHandler","eventData","cdpClient","createClient","CdpClient","EventEmitter_js_1","require$$0","_cdpConnection","_sessionId","constructor","super","sendCommand","method","params","param","cdpConnection","sessionId","CdpConnection","cdpClient_js_1","transport","browserCdpClient","sessionCdpClients","commandCallbacks","log","nextId","logCdp","setOnMessage","_onMessage","close","_id","reject","Error","clear","browserClient","getCdpClient","Promise","resolve","id","messageObj","messageStr","JSON","stringify","sendMessage","async","message","parsed","parse","delete","undefined","callbacks","result","error","client","websocketTransport","WebSocketTransport","_ws","call","onMessage","send","exports","enumerable","cdpConnection_js_1","require$$1","websocketTransport_js_1","require$$2","LogType","logType","messages","console","globalThis","processingQueue","ProcessingQueue","logSystem","system","queue","processor","catch","isProcessing","_catch","add","entry","processIfNeeded","length","entryPromise","shift","then","finally","OutgoindBidiMessage","OutgoingBidiMessage","channel","static","messagePromise","SubscriptionManager_1","SubscriptionManager","SubscriptionManager$1","subscriptionPriority","channelToContextToEventMap","getChannelsSubscribedToEvent","eventMethod","contextId","Array","from","keys","priority","getEventSubscriptionPriorityForChannel","filter","sort","a","b","contextToEventMap","priorities","p","Math","min","subscribe","has","eventMap","unsubscribe","size","idWrapper","IdWrapper","counter","buffer","Buffer","capacity","entries","onItemRemoved","item","BrowsingContext","EventNames","Log","CDP","Message","ErrorResponseClass","stacktrace","toErrorResponse","commandId","UnknownException","UnknownCommandException","InvalidArgumentException","NoSuchFrameException","browsingContextStorage","BrowsingContextStorage","protocol_js_1","contexts","values","c","parentId","context","getKnownContext","addChild","findContext","EventManager_1","EventManager","OutgoindBidiMessage_js_1","SubscriptionManager_js_1","idWrapper_js_1","buffer_js_1","require$$3","browsingContextStorage_js_1","require$$4","EventWrapper","eventToContextsMap","eventBuffers","lastMessageSent","subscriptionManager","bidiServer","eventName","browsingContext","registerPromiseEvent","eventWrapper","sortedChannels","bufferEvent","emitOutgoingMessage","createFromPromise","markEventSent","eventNames","contextIds","hasKnownContext","getBufferedEvents","events","eventBufferLength","bufferMapKey","getMapKey","Set","lastSentMapKey","max","lastSentMessageId","Infinity","wrapper","_contextId","forEach","e1","e2","EventManager$1","deferred","Deferred","promise","isFinished","onFulfilled","onRejected","reason","onFinally","Symbol","toStringTag","logHelper","getRemoteValuesText","logMessageFormatter","specifiers","isFormmatSpecifier","str","some","spec","includes","args","output","argFormat","toString","argValues","tokens","split","RegExp","join","token","arg","stringFromArg","parseInt","parseFloat","toJson","pair","val","hasOwnProperty","String","pattern","flags","Date","formatText","scriptEvaluator","ScriptEvaluator","cdpRemoteObject","resultOwnership","realm","cdpRemoteObjectToCallArgument","cdpWebDriverValue","functionDeclaration","obj","awaitPromise","arguments","generateWebDriverValue","executionContextId","cdpToBidiValue","objectId","unserializableValue","cdpObject","returnByValue","_this","_arguments","callFunctionAndSerializeScript","thisAndArgumentsList","deserializeToCdpArg","cdpCallFunctionResult","code","exceptionDetails","serializeCdpExceptionDetails","callFunctionStacktraceLineOffset","realmId","knownHandlesToRealm","r","h","handle","cdpExceptionDetails","lineOffset","callFrames","stackTrace","frame","url","functionName","lineNumber","columnNumber","exception","serializeCdpObject","text","stringifyObject","cdpValue","webDriverValue","bidiValue","expression","cdpEvaluateResult","evaluateStacktraceLineOffset","argumentValue","keyValueArray","flattenKeyValuePairs","flattenValueList","key","keyArg","valueArg","list","Realm","RealmType","scriptEvaluator_js_1","browsingContextId","origin","sandbox","cdpSessionId","realmMap","maybeRealms","findRealms","maybeRealm","findRealm","realmDestroyed","toBiDi","awaitUnblocked","callFunction","scriptEvaluate","disown","logManager","LogManager","logHelper_js_1","realm_js_1","eventManager","initialize","initializeEventListeners","initializeLogEntryAddedEventListener","argsPromise","LogEntryAddedEvent","level","getLogLevel","source","timestamp","round","getBidiStackTrace","textPromise","consoleApiType","cdpStackTrace","stackFrames","callFrame","browsingContextImpl","BrowsingContextImpl","deferred_js_1","logManager_js_1","targetDefers","documentInitialized","targetUnblocked","Page","navigatedWithinDocument","lifecycleEvent","DOMContentLoaded","load","cdpBrowserContextId","children","loaderId","maybeDefaultRealm","defaultRealm","initListeners","addContext","registerEvent","ContextCreatedEvent","serializeToBidiValue","unblockAttachedTarget","convertFrameToTargetContext","updateConnection","removeChildContexts","ContextDestroyedEvent","removeContext","child","create","enabled","autoAttach","waitForDebuggerOnStart","flatten","maxDepth","addParentFiled","parent","targetInfo","targetId","urlFragment","clearBrowsingContext","frameId","name","documentChanged","DomContentLoadedEvent","navigation","LoadEvent","auxData","uniqueId","getOrigin","window","isDefault","wait","cdpNavigateResult","errorText","maybeSandboxes","worldName","browsingContextProcessor","BrowsingContextProcessor","browsingContextImpl_js_1","logContext","browsingContexts","sessions","selfTargetId","setBrowserClientEventListeners","setTargetEventListeners","handleAttachedToTargetEvent","handleDetachedFromTargetEvent","setSessionEventListeners","sessionCdpClient","EventReceivedEvent","cdpMethod","cdpParams","cdpSession","createFrameContext","parentFrameId","parentSessionCdpClient","targetSessionCdpClient","isValidTarget","createTargetContext","browserContextId","root","getTopLevelContexts","Number","MAX_VALUE","referenceContext","newWindow","awaitLoaded","navigate","target","getRealm","getOrCreateSandbox","process_script_getRealms","realms","handles","commandParams","detachedFromTargetPromise","onContextDestroyed","eventParams","CommandProcessor_1","CommandProcessor","browsingContextProcessor_js_1","BidiNoOpParser","parseGetRealmsParams","parseCallFunctionParams","parseEvaluateParams","parseDisownParams","parseSendCommandParams","parseGetSessionParams","parseNavigateParams","parseGetTreeParams","parseSubscribeParams","parseCreateParams","parseCloseParams","contextProcessor","parser","ready","commandData","process_session_status","process_session_subscribe","process_session_unsubscribe","process_browsingContext_create","process_browsingContext_close","process_browsingContext_getTree","process_browsingContext_navigate","process_script_callFunction","process_script_evaluate","process_script_disown","process_cdp_sendCommand","process_cdp_getSession","processCommand","command","response","createResolved","errorResponse","CommandProcessor$1","BidiServer_1","BidiServer","processingQueue_js_1","EventManager_js_1","CommandProcessor_js_1","messageQueue","commandProcessor","bidiTransport","processOutgoingMessage","handleIncomingMessage","server","discover","messageEntry","BidiServer$1","mapperTabPage","MapperTabPage","document","documentElement","innerHTML","mapperPageSource","findOrCreateTypeLogContainer","typeLogContainer","lineElement","createElement","className","textContent","appendChild","containerId","existingContainer","getElementById","debugElement","divider","htmlItem","util","getParsedType","ZodParsedType","assertNever","_x","arrayToEnum","items","getValidEnumValues","validKeys","objectKeys","k","filtered","objectValues","object","prototype","find","arr","checker","isInteger","isFinite","floor","joinValues","array","separator","data","string","isNaN","nan","number","boolean","function","bigint","isArray","null","date","unknown","setErrorMap","defaultErrorMap","ZodError","ZodIssueCode","util_1","quotelessJson","replace","issues","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","errors","format","_mapper","mapper","issue","fieldErrors","_errors","processError","unionErrors","returnTypeError","argumentsError","path","curr","el","isEmpty","formErrors","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","too_small","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","defaultError","overrideErrorMap","isAsync","isValid","isDirty","isAborted","OK","DIRTY","INVALID","ParseStatus","addIssueToContext","EMPTY_PATH","makeIssue","ZodError_1","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","reverse","ctx","common","contextualErrorMap","schemaErrorMap","x","dirty","abort","status","results","arrayValue","s","pairs","syncPairs","mergeObjectSync","finalObject","alwaysSet","freeze","typeAliases","errorUtil","errToObj","intersection","instanceof","enum","effect","any","ZodFirstPartyTypeKind","ZodSchema","Schema","ZodNaN","ZodDefault","ZodNullable","ZodTransformer","ZodEffects","ZodPromise","ZodNativeEnum","ZodEnum","ZodLiteral","ZodFunction","ZodSet","ZodMap","ZodRecord","ZodTuple","ZodIntersection","ZodUnion","ZodObject","objectUtil","ZodArray","ZodVoid","ZodNever","ZodAny","ZodNull","ZodUndefined","ZodDate","ZodBoolean","ZodBigInt","ZodString","ZodType","void","union","tuple","transformer","strictObject","record","preprocess","ostring","optional","onumber","oboolean","nullable","never","nativeEnum","literal","lazy","errorUtil_1","parseUtil_1","ParseInputLazyPath","_path","_key","concat","handleResult","success","processCreateParams","errorMap","invalid_type_error","required_error","description","iss","def","spa","safeParseAsync","superRefine","_refinement","_def","bind","safeParse","parseAsync","refine","refinement","nullish","or","and","transform","describe","isNullable","isOptional","_getType","input","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","_a","maybeAsyncResult","check","getIssueProperties","setError","refinementData","schema","typeName","ZodOptional","option","incoming","innerType","defaultValue","This","cuidRegex","uuidRegex","emailRegex","_regex","regex","test","nonempty","trim","checks","kind","URL","lastIndex","_addCheck","email","uuid","cuid","minLength","maxLength","len","isEmail","ch","isURL","isUUID","isCUID","floatSafeRemainder","step","valDecCount","stepDecCount","decCount","toFixed","pow","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","minValue","maxValue","isInt","getTime","_any","ZodUnknown","_unknown","mergeArray","element","mergeShapes","first","second","AugmentFactory","augmentation","shape","deepPartialify","newShape","fieldSchema","unwrap","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","keyValidator","catchall","unknownKeys","strict","_b","_c","_d","strip","setKey","merge","merging","index","pick","mask","omit","deepPartial","partial","required","newField","strictCreate","lazycreate","childCtx","types","ZodDiscriminatedUnion","discriminator","discriminatorValue","validDiscriminatorValues","mergeValues","aType","bType","valid","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","left","right","rest","itemIndex","schemas","keySchema","keyType","valueSchema","valueType","mergeObjectAsync","third","finalMap","minSize","maxSize","finalizeSet","elements","parsedSet","validate","implement","makeArgsIssue","makeReturnsIssue","returns","fn","parsedArgs","parsedReturns","parameters","returnType","func","strictImplement","ZodLazy","getter","expectedValues","enumValues","Values","Enum","nativeEnumValues","promisified","processed","checkCtx","fatal","executeRefinement","acc","inner","base","createWithPreprocess","removeDefault","p2","late","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","discriminatedUnion","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","__createBinding","o","k2","__exportStar","__setModuleDefault","v","__importStar","z","Session","Script","parseObject","zod_1","logParser","commandParser","parseResult","CommonDataTypes","RemoteReferenceSchema","UndefinedValueSchema","NullValueSchema","StringValueSchema","SpecialNumberSchema","NumberValueSchema","BooleanValueSchema","BigIntValueSchema","PrimitiveProtocolValueSchema","LocalValueSchema","ArrayLocalValueSchema","DateLocalValueSchema","MapLocalValueSchema","ObjectLocalValueSchema","RegExpLocalValueSchema","SetLocalValueSchema","LocalOrRemoteValueSchema","ListLocalValueSchema","MappingLocalValueSchema","BrowsingContextSchema","RealmTypeSchema","GetRealmsParametersSchema","ContextTargetSchema","RealmTargetSchema","TargetSchema","OwnershipModelSchema","EvaluateParametersSchema","DisownParametersSchema","ArgumentValueSchema","ScriptCallFunctionParametersSchema","GetTreeParametersSchema","ReadinessStateSchema","NavigateParametersSchema","CreateParametersSchema","CloseParametersSchema","SendCommandParamsSchema","GetSessionParamsSchema","EventNameSchema","SubscribeParametersSchema","desc","getOwnPropertyDescriptor","writable","configurable","bidiTab","index_js_1","BidiServer_js_1","log_js_1","mapperTabPage_js_1","Parser","require$$5","logBidi","bidi","_waitSelfTargetIdPromise","setSelfTargetId","_waitSelfTargetId","generatePage","WindowBidiTransport","onBidiMessage","parseBidiMessage","respondWithError","sendBidiResponse","plainCommandData","errorCode","getErrorResponse","messageId","getJsonType","idType","methodType","paramsType","channelType","createAndStart","WindowCdpTransport","cdp","onmessage","_createCdpConnection","BidiParserImpl","_createBidiServer","launched"],"mappings":"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"}